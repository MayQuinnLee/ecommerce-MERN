{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","createdProduct","productUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDelete","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","variant","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","HomeScreen","useEffect","key","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","description","slotsAvailable","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","addToCart","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","getOrderDetails","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutStep","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","taxPrice","index","createOrder","shippingPrice","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","deliveredHandler","console","log","href","amount","onSuccess","paymentResult","payOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","successCreate","errorCreate","loadingCreate","deleteProduct","category","instructor","ProductEditScreen","setImage","imageError","setImageError","setDescription","setInstructor","setCategory","setPrice","setSlotsAvailable","imageUploadHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","deleteOrder","App","path","component","exact","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"mMAiBMA,EAAUC,0BAAgB,CAC9BC,YChBgC,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACtE,OAAQA,EAAOC,MACb,ICJgC,uBDK9B,MAAO,CAAEC,SAAS,EAAMH,SAAU,IAEpC,ICNgC,uBDO9B,MAAO,CAAEG,SAAS,EAAOH,SAAUC,EAAOG,SAE5C,ICR6B,oBDS3B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IDKXO,eCFmC,WAAmD,IAAlDP,EAAiD,uDAAzC,CAAEQ,QAAS,CAAEC,QAAS,KAAQP,EAAW,uCACrF,OAAQA,EAAOC,MACb,ICfmC,0BDgBjC,OAAO,aAAEC,SAAS,GAASJ,GAE7B,ICjBmC,0BDkBjC,MAAO,CAAEI,SAAS,EAAOI,QAASN,EAAOG,SAE3C,ICnBgC,uBDoB9B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IDTXU,cCYkC,WAAyB,IAAxBV,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IC1BkC,yBD2BhC,MAAO,CAAEC,SAAS,GAEpB,IC5BkC,yBD6BhC,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,IC9B+B,sBD+B7B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IDvBXY,cC2BkC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICtCkC,yBDuChC,MAAO,CAAEC,SAAS,GAEpB,ICxCkC,yBDyChC,MAAO,CAAEA,SAAS,EAAOS,eAAgBX,EAAOG,QAASM,SAAS,GAEpE,IC1C+B,sBD2C7B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,IC5CgC,uBD6C9B,MAAO,GAET,QACE,OAAOL,IDzCXc,cC6CkC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICpDkC,yBDqDhC,MAAO,CAAEC,SAAS,GAEpB,ICtDkC,yBDuDhC,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,ICxD+B,sBDyD7B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IDxDXe,KGrByB,WAA6D,IAA5Df,EAA2D,uDAAnD,CAAEgB,UAAW,GAAIC,gBAAiB,IAAMf,EAAW,uCACrF,OAAQA,EAAOC,MACb,ICJyB,gBDKvB,IAAMe,EAAOhB,EAAOG,QAGdc,EAAYnB,EAAMgB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEb,UAAYU,EAAKV,WAE/D,OAAIW,EACK,2BACFnB,GADL,IAEEgB,UAAWhB,EAAMgB,UAAUM,KAAI,SAAAD,GAAC,OAC9BA,EAAEb,UAAYW,EAAUX,QAAUU,EAAOG,OAItC,2BACFrB,GADL,IAEEgB,UAAU,GAAD,mBAAMhB,EAAMgB,WAAZ,CAAuBE,MAKtC,ICxB4B,mBDyB1B,OAAO,2BACFlB,GADL,IAEEgB,UAAWhB,EAAMgB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEb,UAAYN,EAAOG,aAGhE,IC7BsC,6BD8BpC,OAAO,2BACFL,GADL,IAEEiB,gBAAiBf,EAAOG,UAG5B,IClCoC,2BDmClC,OAAO,2BACFL,GADL,IAEEwB,cAAetB,EAAOG,UAG1B,QAAS,OAAOL,IHnBlByB,UKtB8B,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACb,ICJ8B,qBDK5B,MAAO,CAAEC,SAAS,GAEpB,ICN8B,qBDO5B,MAAO,CAAEA,SAAS,EAAOsB,SAAUxB,EAAOG,SAE5C,ICR2B,kBDSzB,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,ICVuB,cDWrB,MAAO,GAET,QACE,OAAOL,ILQX2B,aKJiC,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAIE,EAAW,uCACzD,OAAQA,EAAOC,MACb,IClBiC,wBDmB/B,MAAO,CAAEC,SAAS,GAEpB,ICpBiC,wBDqB/B,MAAO,CAAEA,SAAS,EAAOsB,SAAUxB,EAAOG,SAE5C,ICtB8B,qBDuB5B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,ILPX4B,YKWgC,WAAqC,IAApC5B,EAAmC,uDAA3B,CAAE6B,KAAM,MAAQ3B,EAAW,uCACpE,OAAQA,EAAOC,MACb,IC9BgC,uBD+B9B,OAAO,2BAAKH,GAAZ,IAAmBI,SAAS,IAE9B,IChCgC,uBDiC9B,MAAO,CAAEA,SAAS,EAAOyB,KAAM3B,EAAOG,SAExC,IClC6B,oBDmC3B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,IC7CuB,cD8CrB,MAAO,GAET,QACE,OAAOL,ILzBX8B,kBK6BsC,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IC7CuC,8BD8CrC,MAAO,CAAEC,SAAS,GAEpB,IC/CuC,8BDgDrC,MAAO,CAAEA,SAAS,EAAOO,SAAS,EAAMe,SAAUxB,EAAOG,SAE3D,ICjDoC,2BDkDlC,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,ICnDqC,4BDoDnC,MAAO,GAET,QACE,OAAOL,IL3CX+B,SKgD6B,WAAoC,IAAnC/B,EAAkC,uDAA1B,CAAEgC,MAAO,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACb,IC5D6B,oBD6D3B,MAAO,CAAEC,SAAS,GAEpB,IC9D6B,oBD+D3B,MAAO,CAAEA,SAAS,EAAO4B,MAAO9B,EAAOG,SAEzC,IChE0B,iBDiExB,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,ICpFuB,cDqFrB,MAAO,CAAE2B,MAAO,IAElB,QACE,OAAOhC,IL9DXiC,WKkE+B,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,IC3E+B,sBD4E7B,MAAO,CAAEC,SAAS,GAEpB,IC7E+B,sBD8E7B,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,IC/E4B,mBDgF1B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IL7EXkC,WKiF+B,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACb,ICvF+B,sBDwF7B,MAAO,CAAEC,SAAS,GAEpB,ICzF+B,sBD0F7B,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,IC3F4B,mBD4F1B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IL5FXmC,YO7ByB,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIE,EAAW,uCACjD,OAAQA,EAAOC,MACb,ICJgC,uBDK9B,MAAO,CAAEC,SAAS,GAEpB,ICNgC,uBDO9B,MAAO,CAAEA,SAAS,EAAOO,SAAS,EAAMyB,MAAOlC,EAAOG,SAExD,ICR6B,oBDS3B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IPkBXqC,aOd0B,WAA6E,IAA5ErC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMkC,WAAY,GAAIrB,gBAAiB,IAAMf,EAAW,uCACtG,OAAQA,EAAOC,MACb,IChBiC,wBDiB/B,OAAO,2BACFH,GADL,IAEEI,SAAS,IAGb,ICrBiC,wBDsB/B,MAAO,CAAEA,SAAS,EAAOgC,MAAOlC,EAAOG,SAEzC,ICvB8B,qBDwB5B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IPAXuC,SOIsB,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIE,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IC/B6B,oBDgC3B,MAAO,CACLC,SAAS,GAGb,ICnC6B,oBDoC3B,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,ICrC0B,iBDsCxB,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,ICvC2B,kBDwCzB,MAAO,GAET,QACE,OAAOL,IPpBXwC,YOwByB,WAAqC,IAApCxC,EAAmC,uDAA3B,CAAEyC,OAAQ,IAAMvC,EAAW,uCAC7D,OAAQA,EAAOC,MACb,IC/CiC,wBDgD/B,MAAO,CAAEC,SAAS,GAEpB,ICjDiC,wBDkD/B,MAAO,CAAEA,SAAS,EAAOqC,OAAQvC,EAAOG,SAE1C,ICnD8B,qBDoD5B,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IPnCX0C,UOuCuB,WAAqC,IAApC1C,EAAmC,uDAA3B,CAAEyC,OAAQ,IAAMvC,EAAW,uCAC3D,OAAQA,EAAOC,MACb,IC3D8B,qBD4D5B,MAAO,CAAEC,SAAS,GAEpB,IC7D8B,qBD8D5B,MAAO,CAAEA,SAAS,EAAOqC,OAAQvC,EAAOG,SAE1C,IC/D2B,kBDgEzB,MAAO,CAAED,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,IPlDX2C,YOsDyB,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACjD,OAAQA,EAAOC,MACb,ICvEgC,uBDwE9B,MAAO,CAAEC,SAAS,GAEpB,ICzEgC,uBD0E9B,MAAO,CAAEA,SAAS,EAAOO,SAAS,GAEpC,IC3E6B,oBD4E3B,MAAO,CAAEP,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,MPvDP4C,EAAe,CACnB7B,KAAM,CACJC,UAVyB6B,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAW7G7B,gBAT+B4B,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,GAU/HtB,cAR6BqB,aAAaC,QAAQ,iBAAmBC,KAAKC,MAAMH,aAAaC,QAAQ,kBAAoB,IAU3HrB,UAAW,CAAEC,SARamB,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,OAWxGG,EAAa,CAACC,KAILC,EAFDC,sBAAYvD,EAAS+C,EAAcS,8BAAoBC,kBAAe,WAAf,EAAmBL,K,kHSe3EM,EAAiB,SAACC,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CACPtD,KHnE8B,yBGgEE,EAMEuD,IAAfhC,EANa,EAM1BD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SAVJ,SAaXC,IAAMC,IAAN,qBAAwBT,GAAMI,GAbnB,gBAa1BM,EAb0B,EAa1BA,KACRT,EAAS,CACPtD,KH9E8B,uBG+E9BE,QAAS6D,IAhBuB,kDAoBlCT,EAAS,CACPtD,KHnF2B,oBGoF3BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtB7D,0DAAR,yDCHfC,EAhEA,WACb,IAAMZ,EAAWa,cAGT5C,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAMR,OACE,gCACE,kBAAC8C,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,QAAQ,OAAOC,kBAAgB,GAC3D,kBAACC,EAAA,EAAD,KACE,kBAAC,gBAAD,CAAeC,GAAG,KAChB,kBAACN,EAAA,EAAOO,MAAR,kBAEF,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiB1B,GAAG,oBAClB,kBAAC2B,EAAA,EAAD,CAAKC,UAAU,WACb,kBAAC,gBAAD,CAAeN,GAAG,SAChB,kBAACK,EAAA,EAAIE,KAAL,KACE,uBAAGD,UAAU,yBADf,SAKD1D,EACC,kBAAC4D,EAAA,EAAD,CAAaC,MAAO7D,EAAS8D,KAAMhC,GAAG,YACpC,kBAAC,gBAAD,CAAesB,GAAG,YAChB,kBAACQ,EAAA,EAAYG,KAAb,iBAEF,kBAAC,gBAAD,CAAeX,GAAG,UAChB,kBAACQ,EAAA,EAAYG,KAAb,CAAkBC,QA1Bd,WACpBjC,GDoBwB,SAACA,GAC3BZ,aAAa8C,WAAW,YACxBlC,EAAS,CAAEtD,KHhCc,qBImCP,YAIF,kBAAC,gBAAD,CAAe2E,GAAG,UAChB,kBAACK,EAAA,EAAIE,KAAL,KACE,uBAAGD,UAAU,gBADf,YAML1D,GAAYA,EAASkE,SACpB,kBAACN,EAAA,EAAD,CAAaC,MAAM,QAAQ/B,GAAG,aAC5B,kBAAC,gBAAD,CAAesB,GAAG,mBAChB,kBAACQ,EAAA,EAAYG,KAAb,eAEF,kBAAC,gBAAD,CAAeX,GAAG,sBAChB,kBAACQ,EAAA,EAAYG,KAAb,kBAEF,kBAAC,gBAAD,CAAeX,GAAG,oBAChB,kBAACQ,EAAA,EAAYG,KAAb,uB,iBC3CLI,EAZA,WACb,OACE,gCACE,kBAAChB,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKX,UAAU,oBAAf,+B,SCNJY,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,yBAAKf,UAAU,UACb,0BAAMgB,MAAO,CAAED,UACb,uBAAGf,UAAWa,GAAS,EAAT,cAA6BA,GAAS,GAAT,wCAE7C,0BAAMG,MAAO,CAAED,UACb,uBAAGf,UAAWa,GAAS,EAAT,cAA6BA,GAAS,IAAT,wCAE7C,0BAAMG,MAAO,CAAED,UACb,uBAAGf,UAAWa,GAAS,EAAT,cAA6BA,GAAS,IAAT,wCAE7C,0BAAMG,MAAO,CAAED,UACb,uBAAGf,UAAWa,GAAS,EAAT,cAA6BA,GAAS,IAAT,wCAE7C,0BAAMG,MAAO,CAAED,UACb,uBAAGf,UAAWa,GAAS,EAAT,cAA6BA,GAAS,IAAT,wCAE7C,8BAAQC,GAAQA,KAKtBF,EAAOK,aAAe,CACpBF,MAAO,WAGMH,QCKAM,EA7BC,SAAC,GAAiB,IAAf9F,EAAc,EAAdA,QACjB,OACE,kBAAC+F,EAAA,EAAD,CAAMnB,UAAU,oBAEd,kBAAC,OAAD,CAAMN,GAAE,mBAActE,EAAQgG,MAC5B,kBAACD,EAAA,EAAKE,IAAN,CAAUC,IAAKlG,EAAQmG,MAAOhC,QAAQ,SAGxC,kBAAC4B,EAAA,EAAKK,KAAN,KAEE,kBAAC,OAAD,CAAM9B,GAAE,mBAActE,EAAQgG,MAC5B,kBAACD,EAAA,EAAKM,MAAN,CAAYC,GAAG,OACb,gCAAStG,EAAQgF,QAIrB,kBAACe,EAAA,EAAKQ,KAAN,CAAWD,GAAG,OACZ,kBAAC,EAAD,CACEb,MAAOzF,EAAQwG,OACfd,KAAI,UAAK1F,EAAQyG,WAAb,eAGR,kBAACV,EAAA,EAAKQ,KAAN,CAAW3B,UAAU,OAAO0B,GAAG,MAA/B,IAAsCtG,EAAQ0G,UCxBzCC,EAAe,yDAAM,WAAO1D,GAAP,iBAAAE,EAAA,sEAE9BF,EAAS,CAAEtD,KZLqB,yBYGF,SAIP6D,IAAMC,IAAI,iBAJH,gBAItBC,EAJsB,EAItBA,KAERT,EAAS,CACPtD,KZT8B,uBYU9BE,QAAS6D,IARmB,gDAW9BT,EAAS,CACPtD,KZb2B,oBYc3BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAbjE,yDAAN,uDAkBfgD,EAAqB,SAAC5D,GAAD,8CAAQ,WAAOC,GAAP,iBAAAE,EAAA,sEAEtCF,EAAS,CAAEtD,KZnBwB,4BYiBG,SAIf6D,IAAMC,IAAN,wBAA2BT,IAJZ,gBAI9BU,EAJ8B,EAI9BA,KAERT,EAAS,CACPtD,KZvBiC,0BYwBjCE,QAAS6D,IAR2B,gDAWtCT,EAAS,CACPtD,KZ3B8B,uBY4B9BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAbzD,yDAAR,uD,SCJnBiD,EAdA,WACb,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLpB,MAAO,CAAEqB,MAAO,QAASC,OAAQ,QAASC,OAAQ,OAAQC,QAAS,UAGnE,0BAAMxC,UAAU,WAAhB,gB,SCRAyC,EAAU,SAAC,GAA2B,IAAzBlD,EAAwB,EAAxBA,QAASmD,EAAe,EAAfA,SAC1B,OACE,kBAACC,EAAA,EAAD,CAAOpD,QAASA,GACbmD,IAKPD,EAAQxB,aAAe,CACrB1B,QAAS,QAGIkD,QCwBAG,EA9BI,WACjB,IAAMvE,EAAWa,cACXvE,EAAcwE,aAAY,SAAAvE,GAAK,OAAIA,EAAMD,eACvCK,EAA6BL,EAA7BK,QAASE,EAAoBP,EAApBO,MAAOL,EAAaF,EAAbE,SAOxB,OALAgI,qBAAU,WACRxE,EAAS0D,OAEP,CAAC1D,IAGH,oCACE,8CACCrD,EACG,kBAAC,EAAD,MACAE,EACE,kBAAC,EAAD,CAASqE,QAAQ,SAASmD,SAAUxH,IAEtC,kBAACwF,EAAA,EAAD,KACG7F,EAASqB,KAAI,SAAAd,GAAO,OACnB,kBAACuF,EAAA,EAAD,CAAKmC,IAAK1H,EAAQgG,IAAK2B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC/C,kBAAC,EAAD,CAAS9H,QAASA,W,0CC6FnB+H,EAlHO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAAY,EACtBC,mBAAS,GADa,mBACrCC,EADqC,KAChCC,EADgC,KAGtCnF,EAAWa,cACX/D,EAAiBgE,aAAY,SAAAvE,GAAK,OAAIA,EAAMO,kBAC1CH,EAA4BG,EAA5BH,QAASE,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAExByH,qBAAU,WACRxE,EAAS2D,EAAmBqB,EAAMI,OAAOrF,OACxC,CAACC,EAAUgF,IAMd,OACE,oCACE,kBAAC,OAAD,CAAM3D,GAAG,IAAIM,UAAU,sBAAvB,aAEChF,EACG,kBAAC,EAAD,MACAE,EACE,kBAAC,EAAD,CAASqE,QAAQ,SAASmD,SAAUxH,IAEtC,kBAACwF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACU,EAAA,EAAD,CAAOpC,IAAKlG,EAAQmG,MAAOoC,IAAKvI,EAAQgF,KAAMwD,OAAK,KAGrD,kBAACjD,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACa,EAAA,EAAD,CAAWtE,QAAQ,SACjB,kBAACsE,EAAA,EAAUxD,KAAX,KAAgB,4BAAKjF,EAAQgF,OAC7B,kBAACyD,EAAA,EAAUxD,KAAX,KACE,kBAAC,EAAD,CAAQQ,MAAOzF,EAAQwG,OAAQd,KAAI,UAAK1F,EAAQyG,WAAb,eAErC,kBAACgC,EAAA,EAAUxD,KAAX,SAAkBjF,EAAQ0G,OAC1B,kBAAC+B,EAAA,EAAUxD,KAAX,KAAiBjF,EAAQ0I,eAI7B,kBAACnD,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAAC7B,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,CAAWtE,QAAQ,SACjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,KACE,oCACIvF,EAAQ0G,UAMlB,kBAAC+B,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBAGA,kBAACA,EAAA,EAAD,KACGvF,EAAQ2I,eAAiB,EAAI,kBAAoB,gBAKvD3I,EAAQ2I,eAAiB,GACxB,kBAACF,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,yBAGA,kBAACA,EAAA,EAAD,KACE,kBAACqD,EAAA,EAAKC,QAAN,CACEvC,GAAG,SACHb,MAAO0C,EACPW,SAAW,SAAAC,GAAC,OAAIX,EAAOW,EAAEC,OAAOvD,SAE9B,YAAIwD,MAAMjJ,EAAQ2I,gBAAgBO,QAAQpI,KAAI,SAAAD,GAAC,OAC7C,4BAAQ6G,IAAK7G,EAAI,EAAG4E,MAAO5E,EAAI,GAC5BA,EAAI,UASrB,kBAAC4H,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC4D,EAAA,EAAD,CACEjE,QAnFC,WACvB8C,EAAQoB,KAAR,gBAAsBnB,EAAMI,OAAOrF,GAAnC,gBAA6CmF,KAmFvBvD,UAAU,gBACVjF,KAAK,SACL0J,SAAUrJ,EAAQ2I,gBAAkB,GAJtC,yBCnGXW,EAAY,SAACtG,EAAImF,GAAL,8CAAa,WAAOlF,EAAUC,GAAjB,iBAAAC,EAAA,sEACbK,IAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KAERT,EAAS,CACPtD,KfPyB,gBeQzBE,QAAS,CACPG,QAAS0D,EAAKsC,IACdhB,KAAMtB,EAAKsB,KACXmB,MAAOzC,EAAKyC,MACZO,MAAOhD,EAAKgD,MACZiC,eAAgBjF,EAAKiF,eACrBR,SAIJ9F,aAAakH,QAAQ,YAAahH,KAAKiH,UAAUtG,IAAW3C,KAAKC,YAf7B,2CAAb,yDCqFViJ,EAjFI,SAAC,GAAkC,IAAhCxB,EAA+B,EAA/BA,MAAOyB,EAAwB,EAAxBA,SAAU1B,EAAc,EAAdA,QAC/B2B,EAAY1B,EAAMI,OAAOrF,GACzBmF,EAAMuB,EAASE,OAASC,OAAOH,EAASE,OAAOE,MAAM,KAAK,IAAM,EAEhE7G,EAAWa,cAETtD,EADKuD,aAAY,SAAAvE,GAAK,OAAIA,EAAMe,QAChCC,UAERiH,qBAAU,WACJkC,GACF1G,EAASqG,EAAUK,EAAWxB,MAE/B,CAAClF,EAAU0G,EAAWxB,IAEzB,IAAM4B,EAAwB,SAAC/G,GAC7BC,EDD0B,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC/CD,EAAS,CACPtD,KftB4B,mBeuB5BE,QAASmD,IAGXX,aAAakH,QAAQ,YAAahH,KAAKiH,UAAUtG,IAAW3C,KAAKC,aCLtDwJ,CAAehH,KAO1B,OACE,kBAACsC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,6CACsB,IAArBpH,EAAUyJ,OAAe,kBAAC,EAAD,2BAA4B,kBAAC,OAAD,CAAM3F,GAAG,KAAT,cACpD,kBAACmE,EAAA,EAAD,CAAWtE,QAAQ,SAChB3D,EAAUM,KAAI,SAAAJ,GAAI,OACjB,kBAAC+H,EAAA,EAAUxD,KAAX,CAAgByC,IAAKhH,EAAKV,SACxB,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACU,EAAA,EAAD,CAAOpC,IAAKxF,EAAKyF,MAAOoC,IAAK7H,EAAKsE,KAAMwD,OAAK,EAAC0B,SAAO,KAEvD,kBAAC3E,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAAC,OAAD,CAAMtD,GAAE,mBAAc5D,EAAKV,UAAYU,EAAKsE,OAE9C,kBAACO,EAAA,EAAD,CAAKqC,GAAI,GAAT,IAAclH,EAAKgG,OACnB,kBAACnB,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACgB,EAAA,EAAKC,QAAN,CACEvC,GAAG,SACHb,MAAO/E,EAAKyH,IACZW,SAAW,SAAAC,GAAC,OAAI9F,EAASqG,EAAU5I,EAAKV,QAAS6J,OAAOd,EAAEC,OAAOvD,WAE/D,YAAIwD,MAAMvI,EAAKiI,gBAAgBO,QAAQpI,KAAI,SAAAD,GAAC,OAC1C,4BAAQ6G,IAAK7G,EAAI,EAAG4E,MAAO5E,EAAI,GAC5BA,EAAI,QAMf,kBAAC0E,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACuB,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,QAAQe,QAAS,kBAAM6E,EAAsBrJ,EAAKV,WAC9E,uBAAG4E,UAAU,0BAQ7B,kBAACW,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAAC7B,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,CAAWtE,QAAQ,SACjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,yCAAezE,EAAU2J,QAAO,SAACC,EAAK1J,GAAN,OAAe0J,EAAM1J,EAAKyH,MAAK,GAA/D,WADF,IAEI3H,EAAU2J,QAAO,SAACC,EAAK1J,GAAN,OAAe0J,EAAO1J,EAAKyH,IAAMzH,EAAKgG,QAAQ,GAAG2D,QAAQ,IAE9E,kBAAC5B,EAAA,EAAUxD,KAAX,KACE,kBAACkE,EAAA,EAAD,CAAQxJ,KAAK,SAASiF,UAAU,YAAYyE,SAA+B,IAArB7I,EAAUyJ,OAAc/E,QApDlE,WACtB8C,EAAQoB,KAAK,8BAmDH,6BC7DCkB,GAbO,SAAC,GAAkB,IAAhBhD,EAAe,EAAfA,SACvB,OACE,kBAACjD,EAAA,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAKV,UAAU,6BACb,kBAACW,EAAA,EAAD,CAAKgF,GAAI,GAAI3C,GAAI,GACdN,MCuDIkD,GAtDK,SAAC,GAA2B,IAAzBd,EAAwB,EAAxBA,SAAU1B,EAAc,EAAdA,QAAc,EACnBE,mBAAS,IADU,mBACtCuC,EADsC,KAC/BC,EAD+B,OAEbxC,mBAAS,IAFI,mBAEtCyC,EAFsC,KAE5BC,EAF4B,KAIvC3H,EAAWa,cACX7C,EAAY8C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCrB,EAA6BqB,EAA7BrB,QAASE,EAAoBmB,EAApBnB,MAAOoB,EAAaD,EAAbC,SAElB2J,EAAWnB,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAEnErC,qBAAU,WACJvG,GACF8G,EAAQoB,KAAKyB,KAEd,CAAC7C,EAAS9G,EAAU2J,IAQvB,OACE,kBAAC,GAAD,KACE,uCACC/K,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCF,GAAW,kBAAC,EAAD,MACZ,kBAACgJ,EAAA,EAAD,CAAMkC,SAVY,SAAC/B,GACrBA,EAAEgC,iBACF9H,EbzBiB,SAACwH,EAAOE,GAAR,8CAAqB,WAAO1H,GAAP,mBAAAE,EAAA,sEAEtCF,EAAS,CACPtD,KHN4B,uBGSxByD,EAAS,CACbC,QAAS,CAAE,eAAgB,qBAPS,SAUfG,IAAMwH,KAC3B,mBACA,CAAEP,QAAOE,YACTvH,GAboC,gBAU9BM,EAV8B,EAU9BA,KAKRT,EAAS,CACPtD,KHlB4B,qBGmB5BE,QAAS6D,IAGXrB,aAAakH,QAAQ,WAAYhH,KAAKiH,UAAU9F,IApBV,kDAuBtCT,EAAS,CACPtD,KHzByB,kBG0BzBE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAzBzD,0DAArB,sDayBRqH,CAAMR,EAAOE,MAUlB,kBAAC/B,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,sBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,QAAQ0L,YAAY,cAAc5F,MAAOgF,EAAO3B,SAAU,SAAAC,GAAC,OAAI2B,EAAS3B,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,YACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,WAAW0L,YAAY,iBAAiB5F,MAAOkF,EAAU7B,SAAU,SAAAC,GAAC,OAAI6B,EAAY7B,EAAEC,OAAOvD,WAIlH,kBAAC0D,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,WAA9B,YAIF,kBAACmB,EAAA,EAAD,CAAKV,UAAU,QACb,kBAACW,EAAA,EAAD,qBAAmB,IACjB,kBAAC,OAAD,CAAMjB,GAAIuG,EAAQ,4BAAwBA,GAAa,aAAvD,iBC4BKS,GA3EQ,SAAC,GAA2B,IAAzB5B,EAAwB,EAAxBA,SAAU1B,EAAc,EAAdA,QAAc,EACxBE,mBAAS,IADe,mBACzClD,EADyC,KACnCuG,EADmC,OAEtBrD,mBAAS,IAFa,mBAEzCuC,EAFyC,KAElCC,EAFkC,OAGhBxC,mBAAS,IAHO,mBAGzCyC,EAHyC,KAG/BC,EAH+B,OAIF1C,mBAAS,IAJP,mBAIzCsD,EAJyC,KAIxBC,EAJwB,OAKlBvD,mBAAS,MALS,mBAKzCtE,EALyC,KAKhC8H,EALgC,KAO1CzI,EAAWa,cACX3C,EAAe4C,aAAY,SAAAvE,GAAK,OAAIA,EAAM2B,gBACxCvB,EAA6BuB,EAA7BvB,QAASE,EAAoBqB,EAApBrB,MAAOoB,EAAaC,EAAbD,SAElB2J,EAAWnB,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAEnErC,qBAAU,WACJvG,GACF8G,EAAQoB,KAAKyB,KAGd,CAAC7C,EAAS9G,EAAU2J,EAAUF,EAAUa,IAY3C,OACE,kBAAC,GAAD,KACE,uCACC5H,GAAW,kBAAC,EAAD,CAASO,QAAQ,UAAUP,GACtC9D,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCF,GAAW,kBAAC,EAAD,MACZ,kBAACgJ,EAAA,EAAD,CAAMkC,SAhBY,SAAC/B,GACrBA,EAAEgC,iBACEJ,IAAaa,EACfE,EAAW,2BAEXA,EAAW,MACXzI,EdGkB,SAAC+B,EAAMyF,EAAOE,GAAd,8CAA2B,WAAO1H,GAAP,mBAAAE,EAAA,sEAE/CF,EAAS,CACPtD,KHpC+B,0BGuC3ByD,EAAS,CACbC,QAAS,CAAE,eAAgB,qBAPkB,SAUxBG,IAAMwH,KAC3B,aACA,CAAEhG,OAAMyF,QAAOE,YACfvH,GAb6C,gBAUvCM,EAVuC,EAUvCA,KAKRT,EAAS,CACPtD,KHhD+B,wBGiD/BE,QAAS6D,IAGXT,EAAS,CACPtD,KH1D4B,qBG2D5BE,QAAS6D,IAGXrB,aAAakH,QAAQ,WAAYhH,KAAKiH,UAAU9F,IAzBD,kDA4B/CT,EAAS,CACPtD,KH5D4B,qBG6D5BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA9BhD,0DAA3B,sDcHT+H,CAAS3G,EAAMyF,EAAOE,OAY7B,kBAAC/B,EAAA,EAAKsC,MAAN,CAAYC,UAAU,QACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,iBAAiB5F,MAAOT,EAAM8D,SAAU,SAAAC,GAAC,OAAIwC,EAAQxC,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,sBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,QAAQ0L,YAAY,cAAc5F,MAAOgF,EAAO3B,SAAU,SAAAC,GAAC,OAAI2B,EAAS3B,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,YACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,WAAW0L,YAAY,iBAAiB5F,MAAOkF,EAAU7B,SAAU,SAAAC,GAAC,OAAI6B,EAAY7B,EAAEC,OAAOvD,WAIlH,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,mBACpB,kBAACvC,EAAA,EAAKwC,MAAN,yBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,WAAW0L,YAAY,oBAAoB5F,MAAO+F,EAAiB1C,SAAU,SAAAC,GAAC,OAAI0C,EAAmB1C,EAAEC,OAAOvD,WAInI,kBAAC0D,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,WAA9B,aAIF,kBAACmB,EAAA,EAAD,CAAKV,UAAU,QACb,kBAACW,EAAA,EAAD,yBAAuB,IACrB,kBAAC,OAAD,CAAMjB,GAAIuG,EAAQ,yBAAqBA,GAAa,UAApD,c,UC/CGe,GAAkB,SAAC5I,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,sEAEnCF,EAAS,CAAEtD,KhB5BsB,0BgB0BE,EAICuD,IAAfhC,EAJc,EAI3BD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SARH,SAYZC,IAAMC,IAAN,sBAAyBT,GAAMI,GAZnB,gBAY3BM,EAZ2B,EAY3BA,KAERT,EAAS,CACPtD,KhBxC+B,wBgByC/BE,QAAS6D,IAhBwB,kDAmBnCT,EAAS,CACPtD,KhB5C4B,qBgB6C5BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UArB5D,0DAAR,yDC4GhBiI,GAhIO,SAAC,GAA0B,EAAxBnC,SAAyB,IAAf1B,EAAc,EAAdA,QAAc,EACvBE,mBAAS,IADc,mBACxClD,EADwC,KAClCuG,EADkC,OAErBrD,mBAAS,IAFY,mBAExCuC,EAFwC,KAEjCC,EAFiC,OAGfxC,mBAAS,IAHM,mBAGxCyC,EAHwC,KAG9BC,EAH8B,OAID1C,mBAAS,IAJR,mBAIxCsD,EAJwC,KAIvBC,EAJuB,OAKjBvD,mBAAS,MALQ,mBAKxCtE,EALwC,KAK/B8H,EAL+B,KAOzCzI,EAAWa,cAEX1C,EAAc2C,aAAY,SAAAvE,GAAK,OAAIA,EAAM4B,eACvCxB,EAAyBwB,EAAzBxB,QAASE,EAAgBsB,EAAhBtB,MAAOuB,EAASD,EAATC,KAGhBH,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAGAf,EADkB4D,aAAY,SAAAvE,GAAK,OAAIA,EAAM8B,qBAC7CnB,QAEF6B,EAAc+B,aAAY,SAAAvE,GAAK,OAAIA,EAAMwC,eAC9B8J,EAA8C9J,EAAvDpC,QAA+BmM,EAAwB/J,EAA/BlC,MAAoBmC,EAAWD,EAAXC,OAEpDwF,qBAAU,WACHvG,GAIEG,GAAQlB,GACX8C,EAAS,CAAEtD,KnBrBsB,8BmBsBjCsD,EAASF,EAAe,YACxBE,ED4CoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE9BF,EAAS,CAAEtD,KhBxEsB,0BgBsEH,EAIMuD,IAAfhC,EAJS,EAItBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SARR,SAYPC,IAAMC,IAAN,uBAAkCL,GAZ3B,gBAYtBM,EAZsB,EAYtBA,KAERT,EAAS,CACPtD,KhBpF+B,wBgBqF/BE,QAAS6D,IAhBmB,kDAoB9BT,EAAS,CACPtD,KhBzF4B,qBgB0F5BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtBjE,0DAAN,2DC1CpB2H,EAAQlK,EAAK2D,MACb0F,EAASrJ,EAAKoJ,QAThBzC,EAAQoB,KAAK,YAad,CAACnG,EAAU+E,EAAS9G,EAAUG,EAAMlB,IAYvC,OACE,kBAACmF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,4CACChE,GAAW,kBAAC,EAAD,CAASO,QAAQ,UAAUP,GACtC9D,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GACpCK,GAAW,kBAAC,EAAD,CAASgE,QAAQ,WAAjB,mBACXvE,GAAW,kBAAC,EAAD,MACZ,kBAACgJ,EAAA,EAAD,CAAMkC,SAlBU,SAAC/B,GACrBA,EAAEgC,iBACEJ,IAAaa,EACfE,EAAW,2BAEXA,EAAW,MACXzI,EhB8C2B,SAACD,EAAI3B,GAAL,8CAAc,WAAO4B,EAAUC,GAAjB,uBAAAC,EAAA,sEAE3CF,EAAS,CACPtD,KH1FqC,gCGuFI,EAMPuD,IAAfhC,EANsB,EAMnCD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SAXK,SAcpBC,IAAMwI,IAAN,qBAAwBhJ,GAAM3B,EAAM+B,GAdhB,gBAcnCM,EAdmC,EAcnCA,KACRT,EAAS,CACPtD,KHtGqC,8BGuGrCE,QAAS6D,IAGXT,EAAS,CACPtD,KH/G8B,uBGgH9BE,QAAS6D,IAGXrB,aAAakH,QAAQ,WAAYhH,KAAKiH,UAAU9F,IAzBL,kDA4B3CT,EAAS,CACPtD,KHlHkC,2BGmHlCE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA9BpD,0DAAd,wDgB9ClBqI,CAAkB,UAAW,CAAEjJ,GAAI3B,EAAK2E,IAAKhB,OAAMyF,QAAOE,iBAc/D,kBAAC/B,EAAA,EAAKsC,MAAN,CAAYC,UAAU,QACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,iBAAiB5F,MAAOT,EAAM8D,SAAU,SAAAC,GAAC,OAAIwC,EAAQxC,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,sBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,QAAQ0L,YAAY,cAAc5F,MAAOgF,EAAO3B,SAAU,SAAAC,GAAC,OAAI2B,EAAS3B,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,YACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,WAAW0L,YAAY,iBAAiB5F,MAAOkF,EAAU7B,SAAU,SAAAC,GAAC,OAAI6B,EAAY7B,EAAEC,OAAOvD,WAIlH,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,mBACpB,kBAACvC,EAAA,EAAKwC,MAAN,yBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,WAAW0L,YAAY,oBAAoB5F,MAAO+F,EAAiB1C,SAAU,SAAAC,GAAC,OAAI0C,EAAmB1C,EAAEC,OAAOvD,WAInI,kBAAC0D,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,WAA9B,YAKJ,kBAACoB,EAAA,EAAD,CAAKqC,GAAI,GACP,yCACCkE,EACI,kBAAC,EAAD,MACDC,EACG,kBAAC,EAAD,CAAS5H,QAAQ,UAAU4H,GAC3B,kBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC1H,UAAU,YACpD,+BACE,4BACE,kCACA,oCACA,qCACA,oCACA,yCACA,+BAGJ,+BACG3C,EAAOnB,KAAI,SAAAc,GAAK,OACf,wBAAI8F,IAAK9F,EAAMoE,KACb,4BAAKpE,EAAMoE,KACX,4BAAKpE,EAAM2K,UAAUC,UAAU,EAAG,KAClC,4BAAK5K,EAAM6K,YACX,4BAAK7K,EAAM8K,OAAS9K,EAAM+K,OAAOH,UAAU,EAAG,IAAM,uBAAG5H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAChG,4BAAK/D,EAAMgL,YAAchL,EAAMiL,YAAYL,UAAU,EAAG,IAAM,uBAAG5H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAC1G,4BACE,kBAAC,gBAAD,CAAerB,GAAE,iBAAY1C,EAAMoE,MACjC,kBAACmD,EAAA,EAAD,CAAQhF,QAAQ,QAAQS,UAAU,UAAlC,sBChFTkI,GAxCM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3C,OACE,kBAACvI,EAAA,EAAD,CAAKC,UAAU,kCACb,kBAACD,EAAA,EAAIM,KAAL,KACG8H,EACI,kBAAC,gBAAD,CAAezI,GAAG,UACnB,kBAACK,EAAA,EAAIE,KAAL,eAEC,kBAACF,EAAA,EAAIE,KAAL,CAAUwE,UAAQ,GAAlB,UAGP,kBAAC1E,EAAA,EAAIM,KAAL,KACG+H,EACI,kBAAC,gBAAD,CAAe1I,GAAG,aACnB,kBAACK,EAAA,EAAIE,KAAL,kBAEC,kBAACF,EAAA,EAAIE,KAAL,CAAUwE,UAAQ,GAAlB,aAGP,kBAAC1E,EAAA,EAAIM,KAAL,KACGgI,EACI,kBAAC,gBAAD,CAAe3I,GAAG,YACnB,kBAACK,EAAA,EAAIE,KAAL,iBAEC,kBAACF,EAAA,EAAIE,KAAL,CAAUwE,UAAQ,GAAlB,YAGP,kBAAC1E,EAAA,EAAIM,KAAL,KACGiI,EACI,kBAAC,gBAAD,CAAe5I,GAAG,eACnB,kBAACK,EAAA,EAAIE,KAAL,qBAEC,kBAACF,EAAA,EAAIE,KAAL,CAAUwE,UAAQ,GAAlB,kBC0CE8D,GAvEQ,SAAC,GAAiB,IAAfnF,EAAc,EAAdA,QAClB/E,EAAWa,cAETrD,EADKsD,aAAY,SAAAvE,GAAK,OAAIA,EAAMe,QAChCE,gBAH8B,EAKRyH,mBAASzH,EAAgB2M,SALjB,mBAK/BA,EAL+B,KAKtBC,EALsB,OAMdnF,mBAASzH,EAAgB6M,MANX,mBAM/BA,EAN+B,KAMzBC,EANyB,OAOFrF,mBAASzH,EAAgB+M,YAPvB,mBAO/BA,EAP+B,KAOnBC,EAPmB,OAQRvF,mBAASzH,EAAgBiN,SARjB,mBAQ/BA,EAR+B,KAQtBC,EARsB,KAgBtC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC1B,wCACA,kBAACpE,EAAA,EAAD,CAAMkC,SAVY,SAAC/B,GRaU,IAACrF,EQZhCqF,EAAEgC,iBACF9H,GRWgCS,EQXH,CAAE0J,UAASE,OAAME,aAAYE,WRWjB,SAACzK,EAAUvD,GACtDuD,EAAS,CACPtD,Kf9BsC,6Be+BtCE,QAAS6D,IAGXrB,aAAakH,QAAQ,kBAAmBhH,KAAKiH,UAAU9F,OQhBrDsE,EAAQoB,KAAK,cAQT,kBAACR,EAAA,EAAKsC,MAAN,CAAYC,UAAU,WACpB,kBAACvC,EAAA,EAAKwC,MAAN,gBACA,kBAACxC,EAAA,EAAKC,QAAN,CACElJ,KAAK,UACL0L,YAAY,gBACZ5F,MAAO2H,EACPQ,UAAQ,EACR9E,SAAU,SAAAC,GAAC,OAAIsE,EAAWtE,EAAEC,OAAOvD,WAIvC,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,QACpB,kBAACvC,EAAA,EAAKwC,MAAN,aACA,kBAACxC,EAAA,EAAKC,QAAN,CACElJ,KAAK,OACL0L,YAAY,aACZ5F,MAAO6H,EACPM,UAAQ,EACR9E,SAAU,SAAAC,GAAC,OAAIwE,EAAQxE,EAAEC,OAAOvD,WAIpC,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,cACpB,kBAACvC,EAAA,EAAKwC,MAAN,oBACA,kBAACxC,EAAA,EAAKC,QAAN,CACElJ,KAAK,aACL0L,YAAY,mBACZ5F,MAAO+H,EACPI,UAAQ,EACR9E,SAAU,SAAAC,GAAC,OAAI0E,EAAc1E,EAAEC,OAAOvD,WAI1C,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,WACpB,kBAACvC,EAAA,EAAKwC,MAAN,gBACA,kBAACxC,EAAA,EAAKC,QAAN,CACElJ,KAAK,UACL0L,YAAY,gBACZ5F,MAAOiI,EACPE,UAAQ,EACR9E,SAAU,SAAAC,GAAC,OAAI4E,EAAW5E,EAAEC,OAAOvD,WAIvC,kBAAC0D,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,WAA9B,eCZO0J,GArDO,SAAC,GAAiB,IAAf7F,EAAc,EAAdA,QACjB/E,EAAWa,cACJC,aAAY,SAAAvE,GAAK,OAAIA,EAAMe,QAChCE,iBAGNuH,EAAQoB,KAAK,aANsB,MASKlB,mBAAS,UATd,mBAS9BlH,EAT8B,KASf8M,EATe,KAiBrC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAef,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,8CACA,kBAACrE,EAAA,EAAD,CAAMkC,SAVY,SAAC/B,GTqBQ,IAACrF,ESpB9BqF,EAAEgC,iBACF9H,GTmB8BS,ESnBH1C,ETmBY,SAACiC,EAAUvD,GACpDuD,EAAS,CACPtD,KftCoC,2BeuCpCE,QAAS6D,IAGXrB,aAAakH,QAAQ,gBAAiBhH,KAAKiH,UAAU9F,OSxBnDsE,EAAQoB,KAAK,iBAQT,kBAACR,EAAA,EAAKsC,MAAN,KACE,kBAACtC,EAAA,EAAKwC,MAAN,CAAY9E,GAAG,UAAf,iBACA,kBAACf,EAAA,EAAD,KAEE,kBAACqD,EAAA,EAAKmF,MAAN,CACEpO,KAAK,QACLqO,MAAM,wBACNhL,GAAG,SACHgC,KAAK,gBACLS,MAAM,SACNwI,SAAO,EACPnF,SAAU,SAAAC,GAAO+E,EAAiB/E,EAAEC,OAAOvD,UAG7C,kBAACmD,EAAA,EAAKmF,MAAN,CACEpO,KAAK,QACLqO,MAAM,UACNhL,GAAG,UACHgC,KAAK,gBACLS,MAAM,UACNqD,SAAU,SAAAC,GAAO+E,EAAiB/E,EAAEC,OAAOvD,YAKjD,kBAAC0D,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,WAA9B,eCqGO+J,GAnJU,SAAC,GAAiB,IAAflG,EAAc,EAAdA,QACpB/E,EAAWa,cACXvD,EAAOwD,aAAY,SAAAvE,GAAK,OAAIA,EAAMe,QAIlC4N,EAAc,SAACC,GACnB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAK/D,QAAQ,IAG/C9J,EAAKgO,WAAaJ,EAAY5N,EAAKC,UAAU2J,QAAO,SAACC,EAAK1J,GAAN,OAAe0J,EAAM1J,EAAKgG,MAAQhG,EAAKyH,MAAK,IAChG5H,EAAKiO,SAAWL,EAAYtE,OAAyB,IAAlBtJ,EAAKgO,aACxChO,EAAKkM,WAAa0B,EAAYtE,OAAOtJ,EAAKgO,YAAc1E,OAAOtJ,EAAKiO,WAEpE,IAAM7M,EAAcoC,aAAY,SAAAvE,GAAK,OAAIA,EAAMmC,eACvCxB,EAA0BwB,EAA1BxB,QAASyB,EAAiBD,EAAjBC,MAAO9B,EAAU6B,EAAV7B,MAExB2H,qBAAU,WACJtH,GACF6H,EAAQoB,KAAR,iBAAuBxH,EAAMoE,QAG9B,CAACgC,EAAS7H,IAcb,OACE,oCACE,kBAAC,GAAD,CAAc4M,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACrC,kBAAC5H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACa,EAAA,EAAD,CAAWtE,QAAQ,SAEjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,wCACA,2BACE,6CACC1E,EAAKE,gBAAgB2M,QAFxB,KAEmC7M,EAAKE,gBAAgB6M,KAFxD,KAEgE,IAC7D/M,EAAKE,gBAAgB+M,WAHxB,KAGsC,IAHtC,IAG4CjN,EAAKE,gBAAgBiN,UAInE,kBAACjF,EAAA,EAAUxD,KAAX,KACE,8CACA,4CACC1E,EAAKS,eAGR,kBAACyH,EAAA,EAAUxD,KAAX,KACE,2CAC2B,IAA1B1E,EAAKC,UAAUyJ,OACX,kBAAC,EAAD,2BAGD,kBAACxB,EAAA,EAAD,KACGlI,EAAKC,UAAUM,KAAI,SAACJ,EAAM+N,GAAP,OAClB,kBAAChG,EAAA,EAAUxD,KAAX,CAAgByC,IAAK+G,GACnB,kBAACnJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACU,EAAA,EAAD,CAAOpC,IAAKxF,EAAKyF,MAAOoC,IAAK7H,EAAKsE,KAAMwD,OAAK,EAAC0B,SAAO,KAEvD,kBAAC3E,EAAA,EAAD,CAAKX,UAAU,QACb,kBAAC,OAAD,CAAMN,GAAE,mBAAc5D,EAAKV,UACxBU,EAAKsE,OAGV,kBAACO,EAAA,EAAD,CAAKqC,GAAI,EAAGhD,UAAU,QACnBlE,EAAKyH,IADR,OACiBzH,EAAKgG,MADtB,MACgChG,EAAKyH,IAAMzH,EAAKgG,gBAYlE,kBAACnB,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAAC7B,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,CAAWtE,QAAQ,SAEjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,gDAGF,kBAACwD,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAOhF,EAAKgO,cAIhB,kBAAC9F,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,gBAIJ,kBAACkD,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAOhF,EAAKiO,YAIhB,kBAAC/F,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,SAAOhF,EAAKkM,cAGhB,kBAAChE,EAAA,EAAUxD,KAAX,KACGnF,GAAS,kBAAC,EAAD,CAASqE,QAAQ,UAAjB,IAA4BrE,EAA5B,MAEZ,kBAAC2I,EAAA,EAAUxD,KAAX,KACE,kBAACkE,EAAA,EAAD,CACExJ,KAAK,SACLiF,UAAU,YACVyE,SAA6B,IAAnB9I,EAAKC,UACf0E,QA5GU,SAAC6D,GACzB9F,EL9BuB,SAACrB,GAAD,8CAAW,WAAOqB,EAAUC,GAAjB,uBAAAC,EAAA,sEAElCF,EAAS,CAAEtD,KhBLqB,yBgBGE,EAIEuD,IAAfhC,EAJa,EAI1BD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SATJ,SAaXC,IAAMwH,KAAK,cAAepJ,EAAOwB,GAbtB,gBAa1BM,EAb0B,EAa1BA,KAERT,EAAS,CACPtD,KhBlB8B,uBgBmB9BE,QAAS6D,IAjBuB,kDAoBlCT,EAAS,CACPtD,KhBtB2B,oBgBuB3BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtB7D,0DAAX,wDK8Bd8K,CAAY,CACnB5M,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpBuN,WAAYhO,EAAKgO,WACjBC,SAAUjO,EAAKiO,SACf/B,WAAYlM,EAAKkM,WACjBkC,cAAepO,EAAKoO,mBAgGV,sB,SCgEDC,GA7LK,SAAC,GAAe,IAC5BC,EAD2B,EAAZ5G,MACCI,OAAOrF,GADI,EAGDkF,oBAAS,GAHR,mBAG1B4G,EAH0B,KAGhBC,EAHgB,KAK3B9L,EAAWa,cAEXjC,EAAekC,aAAY,SAAAvE,GAAK,OAAIA,EAAMqC,gBACxCjC,EAA0BiC,EAA1BjC,QAASgC,EAAiBC,EAAjBD,MAAO9B,EAAU+B,EAAV/B,MAElBiC,EAAWgC,aAAY,SAAAvE,GAAK,OAAIA,EAAMuC,YAC3BiN,EAAoCjN,EAA7CnC,QAA8BqP,EAAelN,EAAxB5B,QAGrBe,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAERuG,qBAAU,WACR,IAAMyH,EAAe,uCAAG,gCAAA/L,EAAA,sEACWK,IAAMC,IAAI,sBADrB,gBACR0L,EADQ,EACdzL,MACF0L,EAASC,SAASC,cAAc,WAC/B3P,KAAO,kBACdyP,EAAOlJ,IAAP,kDAAwDiJ,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WAAQT,GAAY,IACpCM,SAASI,KAAKC,YAAYN,GAPJ,4CAAH,sDAUhBxN,GAASA,EAAMoE,MAAQ6I,GAAWI,GACrChM,EAAS,CAAEtD,KtB5Bc,oBsB8BzBsD,EAAS2I,GAAgBiD,KACfjN,EAAM8K,OAKhBqC,GAAY,GAJPY,OAAOC,QACVV,MAKH,CAACjM,EAAUrB,EAAOiN,EAASI,IAE9B,IAKMY,EAAgB,uCAAG,4BAAA1M,EAAA,sEAEfC,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYpC,EAASqC,SAH1B,SAMfC,IAAMwI,IAAN,sBAAyB6C,EAAzB,YAA4C,GAAIzL,GANjC,OAQrBH,EAAS2I,GAAgBiD,IARJ,gDAUrBiB,QAAQC,IAAI,KAAMpM,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,SAV3E,yDAAH,qDActB,OAAOhE,EACF,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAjB,IAA4BrE,EAA5B,KACA,oCACD,kBAACwF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACa,EAAA,EAAD,CAAWtE,QAAQ,SAEjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,wCACA,2BACE,0CAAwBrD,EAAMP,KAAK2D,MAErC,2BACE,2CADF,IAC2B,uBAAGgL,KAAI,iBAAYpO,EAAMP,KAAKoJ,QAAU7I,EAAMP,KAAKoJ,QAE9E,2BACE,6CACC7I,EAAMnB,gBAAgB2M,QAFzB,KAEoCxL,EAAMnB,gBAAgB6M,KAF1D,KAEkE,IAC/D1L,EAAMnB,gBAAgB+M,WAHzB,KAGuC,IAHvC,IAG6C5L,EAAMnB,gBAAgBiN,SAElE9L,EAAMgL,YACF,kBAAC,EAAD,CAASzI,QAAQ,WAAjB,gBAAyCvC,EAAMiL,aAC/C,kBAAC,EAAD,CAAS1I,QAAQ,UAAjB,kBAGP,kBAACsE,EAAA,EAAUxD,KAAX,KACE,8CACA,4CACCrD,EAAMZ,cACNY,EAAM8K,OACF,kBAAC,EAAD,CAASvI,QAAQ,WAAjB,WAAoCvC,EAAM+K,QAC1C,kBAAC,EAAD,CAASxI,QAAQ,UAAjB,aAGP,kBAACsE,EAAA,EAAUxD,KAAX,KACE,2CAC6B,IAA5BrD,EAAME,WAAWmI,OACb,kBAAC,EAAD,uBAGD,kBAACxB,EAAA,EAAD,KACG7G,EAAME,WAAWhB,KAAI,SAACJ,EAAM+N,GAAP,OACpB,kBAAChG,EAAA,EAAUxD,KAAX,CAAgByC,IAAK+G,GACnB,kBAACnJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAACU,EAAA,EAAD,CAAOpC,IAAKxF,EAAKyF,MAAOoC,IAAK7H,EAAKsE,KAAMwD,OAAK,EAAC0B,SAAO,KAEvD,kBAAC3E,EAAA,EAAD,CAAKX,UAAU,QACb,kBAAC,OAAD,CAAMN,GAAE,mBAAc5D,EAAKV,UACxBU,EAAKsE,OAGV,kBAACO,EAAA,EAAD,CAAKqC,GAAI,EAAGhD,UAAU,QACnBlE,EAAKyH,IADR,OACiBzH,EAAKgG,MADtB,MACgChG,EAAKyH,IAAMzH,EAAKgG,gBAYlE,kBAACnB,EAAA,EAAD,CAAKqC,GAAI,GACP,kBAAC7B,EAAA,EAAD,KACE,kBAAC0C,EAAA,EAAD,CAAWtE,QAAQ,SAEjB,kBAACsE,EAAA,EAAUxD,KAAX,KACE,gDAGF,kBAACwD,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,SAAO3D,EAAM2M,cAIjB,kBAAC9F,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,SAAO3D,EAAM+M,iBAIjB,kBAAClG,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,SAAO3D,EAAM4M,YAIjB,kBAAC/F,EAAA,EAAUxD,KAAX,KACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,SAAO3D,EAAM6K,eAGf7K,EAAM8K,QACN,kBAACjE,EAAA,EAAUxD,KAAX,KACG+J,GAAc,kBAAC,EAAD,MACbF,EACA,kBAAC,gBAAD,CAAcmB,OAAQrO,EAAM6K,WAAYyD,UA7H9B,SAACC,GAC7BL,QAAQC,IAAII,GACZlN,ENGoB,SAAC4L,EAASsB,GAAV,8CAA4B,WAAOlN,EAAUC,GAAjB,uBAAAC,EAAA,sEAEhDF,EAAS,CAAEtD,KhBlDkB,sBgBgDmB,EAIZuD,IAAfhC,EAJ2B,EAIxCD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SATU,SAazBC,IAAMwI,IAAN,sBAAyB6C,EAAzB,QAAwCsB,EAAe/M,GAb9B,gBAaxCM,EAbwC,EAaxCA,KAERT,EAAS,CACPtD,KhB/D2B,oBgBgE3BE,QAAS6D,IAjBqC,kDAoBhDT,EAAS,CACPtD,KhBnEwB,iBgBoExBE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtB/C,0DAA5B,wDMHXwM,CAASvB,EAASsB,OA0HE,kBAAC,EAAD,SASpBjP,GAAYA,EAASkE,SAAWxD,EAAMgL,YAClC,kBAACzD,EAAA,EAAD,CAAQvE,UAAU,iBAAiBT,QAAQ,OAAOkF,UAAQ,EAACnE,QAAS2K,GAApE,aAED3O,GAAYA,EAASkE,SAAWxD,EAAM8K,OACnC,kBAACvD,EAAA,EAAD,CAAQvE,UAAU,iBAAiBT,QAAQ,OAAOe,QAAS2K,GAA3D,mBAEA,yCC/GJQ,GAvEQ,SAAC,GAAiB,IAAfrI,EAAc,EAAdA,QAClB/E,EAAWa,cAEXvC,EAAWwC,aAAY,SAAAvE,GAAK,OAAIA,EAAM+B,YACpC3B,EAA0B2B,EAA1B3B,QAASE,EAAiByB,EAAjBzB,MAAO0B,EAAUD,EAAVC,MAGhBN,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAGSoP,EADEvM,aAAY,SAAAvE,GAAK,OAAIA,EAAMiC,cACtCtB,QAERsH,qBAAU,WACJvG,GAAYA,EAASkE,QACvBnC,EtBiHmB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE3BF,EAAS,CACPtD,KHxH2B,sBGqHF,EAMSuD,IAAfhC,EANM,EAMnBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SAVX,SAaJC,IAAMC,IAAN,aAAwBL,GAbpB,gBAanBM,EAbmB,EAanBA,KACRT,EAAS,CACPtD,KHnI2B,oBGoI3BE,QAAS6D,IAhBgB,kDAoB3BT,EAAS,CACPtD,KHxIwB,iBGyIxBE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtBpE,0DAAN,yDsB/GnBoE,EAAQoB,KAAK,OAGd,CAACnG,EAAU+E,EAAS9G,EAAUoP,IAEjC,IAAMC,EAAgB,SAACvN,GACjB2M,OAAOa,QAAQ,kBACjBvN,EtBmIoB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE9BF,EAAS,CACPtD,KH/I6B,wBG4ID,EAMMuD,IAAfhC,EANS,EAMtBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SAVR,SAaxBC,IAAMiN,OAAN,qBAA2BzN,GAAMI,GAbT,OAc9BH,EAAS,CAAEtD,KHzJoB,wBG2ID,gDAiB9BsD,EAAS,CACPtD,KH5J0B,mBG6J1BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAnBjE,yDAAR,wDsBnIX8M,CAAW1N,KAIxB,OACE,oCACE,qCACCpD,EACI,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAC3B,kBAACoM,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC1H,UAAU,YACpD,+BACE,4BACE,kCACA,oCACA,qCACA,qCACA,+BAGJ,+BACGpD,EAAMV,KAAI,SAAAO,GAAI,OACb,wBAAIqG,IAAKrG,EAAK2E,KACZ,4BAAK3E,EAAK2E,KACV,4BAAK3E,EAAK2D,MACV,4BAAI,uBAAGgL,KAAI,kBAAa3O,EAAKoJ,QAAUpJ,EAAKoJ,QAC5C,4BAAKpJ,EAAK+D,QACN,uBAAGR,UAAU,eAAegB,MAAO,CAAED,MAAO,WAC5C,uBAAGf,UAAU,eAAegB,MAAO,CAAED,MAAO,UAEhD,4BACE,kBAAC,gBAAD,CAAerB,GAAE,sBAAiBjD,EAAK2E,IAAtB,UACf,kBAACmD,EAAA,EAAD,CAAQhF,QAAQ,QAAQS,UAAU,UAAS,uBAAGA,UAAU,kBAE1D,kBAACuE,EAAA,EAAD,CAAQhF,QAAQ,SAASS,UAAU,SAASM,QAAS,kBAAMqL,EAAclP,EAAK2E,OAC5E,uBAAGpB,UAAU,2BC6BpB+L,GAvFQ,SAAC,GAAwB,IAAtB3I,EAAqB,EAArBA,QAClB4I,EADuC,EAAZ3I,MACZI,OAAOrF,GADiB,EAGrBkF,mBAAS,IAHY,mBAGtClD,EAHsC,KAGhCuG,EAHgC,OAInBrD,mBAAS,IAJU,mBAItCuC,EAJsC,KAI/BC,EAJ+B,OAKfxC,oBAAS,GALM,mBAKtC9C,EALsC,KAK7ByL,EAL6B,KAOvC5N,EAAWa,cAGT5C,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAEFE,EAAc2C,aAAY,SAAAvE,GAAK,OAAIA,EAAM4B,eACvCxB,EAAyBwB,EAAzBxB,QAASE,EAAgBsB,EAAhBtB,MAAOuB,EAASD,EAATC,KAElBK,EAAaqC,aAAY,SAAAvE,GAAK,OAAIA,EAAMkC,cAC7BoP,EAA8DpP,EAAvE9B,QAA+BmR,EAAwCrP,EAA/C5B,MAA6BkR,EAAkBtP,EAA3BvB,QAEpDsH,qBAAU,WACJvG,GAAYA,EAASkE,QAClB/D,GAAQA,EAAK2E,MAAQ4K,GAGxBrF,EAAQlK,EAAK2D,MACb0F,EAASrJ,EAAKoJ,OACdoG,EAAWxP,EAAK+D,UAJhBnC,EAASF,EAAe6N,IAO1B5I,EAAQoB,KAAK,OAEd,CAACnG,EAAU+E,EAAS9G,EAAU0P,EAAQvP,IAOzC,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,OAAD,CAAMiD,GAAG,kBAAkBM,UAAU,sBAArC,WAGA,2CACChF,EACI,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAE5B,kBAAC8I,EAAA,EAAD,CAAMkC,SAjBI,SAAC/B,GACrBA,EAAEgC,iBACF9H,EvB+IsB,SAACD,EAAI3B,GAAL,8CAAc,WAAO4B,EAAUC,GAAjB,uBAAAC,EAAA,sEAEpCF,EAAS,CACPtD,KHnK6B,wBGgKK,EAMAuD,IAAfhC,EANe,EAM5BD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SAXF,SAcbC,IAAMwI,IAAN,qBAAwBhJ,GAAM3B,EAAM+B,GAdvB,gBAc5BM,EAd4B,EAc5BA,KACRT,EAAS,CACPtD,KH/K6B,wBGkL/BsD,EAAS,CACPtD,KHpM8B,uBGqM9BE,QAAS6D,IArByB,kDAyBpCT,EAAS,CACPtD,KHxL0B,mBGyL1BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA3B3D,0DAAd,wDuB/IbqN,CAAWL,EAAQ,CAAE5L,OAAMyF,QAAOrF,eAiB/B,kBAACwD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,QACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,iBAAiB5F,MAAOT,EAAM8D,SAAU,SAAAC,GAAC,OAAIwC,EAAQxC,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,sBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,QAAQ0L,YAAY,cAAc5F,MAAOgF,EAAO3B,SAAU,SAAAC,GAAC,OAAI2B,EAAS3B,EAAEC,OAAOvD,WAItG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,WACpB,kBAACvC,EAAA,EAAKwC,MAAN,mBACA,kBAACxC,EAAA,EAAKmF,MAAN,CAAYpO,KAAK,WAAWsO,QAAS7I,EAAS0D,SAAU,SAAAC,GAAC,OAAI8H,EAAW9H,EAAEC,OAAOiF,aAInF,kBAAC9E,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,UAAUS,UAAU,QAAlD,UAECmM,EACE,kBAAC,EAAD,CAAS5M,QAAQ,UAAU4M,GAC1BC,EACC,kBAAC,EAAD,iBACCF,EACC,kBAAC,EAAD,MACE,yCCmBVI,GAhGW,SAAC,GAAiB,IAAflJ,EAAc,EAAdA,QACrB/E,EAAWa,cAEXvE,EAAcwE,aAAY,SAAAvE,GAAK,OAAIA,EAAMD,eACvCK,EAA6BL,EAA7BK,QAASE,EAAoBP,EAApBO,MAAOL,EAAaF,EAAbE,SAGhByB,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAGAf,EADc4D,aAAY,SAAAvE,GAAK,OAAIA,EAAMU,iBACzCC,QAEFC,EAAgB2D,aAAY,SAAAvE,GAAK,OAAIA,EAAMY,iBAChC+Q,EAA8E/Q,EAAvFD,QAAwBE,EAA+DD,EAA/DC,eAAuB+Q,EAAwChR,EAA/CN,MAA6BuR,EAAkBjR,EAA3BR,QAEpE6H,qBAAU,WACJvG,GAAYA,EAASkE,QACvBnC,EAAS0D,KAGTqB,EAAQoB,KAAK,KAGX+H,IACFnJ,EAAQoB,KAAR,yBAA+B/I,EAAe2F,IAA9C,UACA/C,EAAS,CAAEtD,K/BnBmB,4B+BsB/B,CAACsD,EAAU+E,EAAS9G,EAAUf,EAASE,EAAgB8Q,IAE1D,IAAMZ,EAAgB,SAACvN,GACjB2M,OAAOa,QAAQ,kBACjBvN,EnBDuB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAEjCF,EAAS,CACPtD,KZnCgC,2BYgCD,EAMGuD,IAAfhC,EANY,EAMzBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SAVL,SAa3BC,IAAMiN,OAAN,wBAA8BzN,GAAMI,GAbT,OAcjCH,EAAS,CAAEtD,KZ7CuB,2BY+BD,gDAiBjCsD,EAAS,CACPtD,KZhD6B,sBYiD7BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAnB9D,yDAAR,wDmBCd0N,CAActO,KAQ3B,OACE,oCACE,kBAACsC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yCAEF,kBAACA,EAAA,EAAD,CAAKX,UAAU,cACb,kBAACuE,EAAA,EAAD,CAAQvE,UAAU,cAAcM,QAXX,WAC3BjC,EnBkByB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE/BF,EAAS,CACPtD,KZvDgC,2BYoDH,EAMKuD,IAAfhC,EANU,EAMvBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SAXP,SAcRC,IAAMwH,KAAN,gBAA4B,GAAI5H,GAdxB,gBAcvBM,EAduB,EAcvBA,KACRT,EAAS,CACPtD,KZnEgC,yBYoEhCE,QAAS6D,IAjBoB,kDAqB/BT,EAAS,CACPtD,KZxE6B,sBYyE7BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAvBhE,0DAAN,2DmBPjB,uBAAGgB,UAAU,eAAb,sBAILwM,GAAgB,kBAAC,EAAD,CAASjN,QAAQ,UAAUiN,GAC3CC,GAAiB,kBAAC,EAAD,MACjBzR,EACI,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAC3B,kBAACoM,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC1H,UAAU,YACpD,+BACE,4BACE,kCACA,oCACA,qCACA,wCACA,0CACA,+BAGJ,+BACGnF,EAASqB,KAAI,SAAAd,GAAO,OACnB,wBAAI0H,IAAK1H,EAAQgG,KACf,4BAAKhG,EAAQgG,KACb,4BAAKhG,EAAQgF,MACb,gCAAMhF,EAAQ0G,OACd,4BAAK1G,EAAQuR,UACb,4BAAKvR,EAAQwR,YACb,4BACE,kBAAC,gBAAD,CAAelN,GAAE,yBAAoBtE,EAAQgG,IAA5B,UACf,kBAACmD,EAAA,EAAD,CAAQhF,QAAQ,QAAQS,UAAU,UAChC,uBAAGA,UAAU,kBAGjB,kBAACuE,EAAA,EAAD,CAAQhF,QAAQ,SAASS,UAAU,SAASM,QAAS,kBAAMqL,EAAcvQ,EAAQgG,OAC/E,uBAAGpB,UAAU,2BCoFpB6M,GAvKW,SAAC,GAAwB,IAAtBzJ,EAAqB,EAArBA,QACrB2B,EAD0C,EAAZ1B,MACZI,OAAOrF,GADiB,EAGxBkF,mBAAS,IAHe,mBAGzClD,EAHyC,KAGnCuG,EAHmC,OAItBrD,mBAAS,IAJa,mBAIzC/B,EAJyC,KAIlCuL,EAJkC,OAKZxJ,oBAAS,GALG,mBAKzCyJ,EALyC,KAK7BC,EAL6B,OAMV1J,mBAAS,IANC,mBAMzCQ,EANyC,KAM5BmJ,EAN4B,OAOZ3J,mBAAS,IAPG,mBAOzCsJ,EAPyC,KAO7BM,EAP6B,OAQhB5J,mBAAS,IARO,mBAQzCqJ,EARyC,KAQ/BQ,EAR+B,OAStB7J,mBAAS,GATa,mBASzCxB,EATyC,KASlCsL,EATkC,OAUJ9J,mBAAS,GAVL,mBAUzCS,EAVyC,KAUzBsJ,EAVyB,KAa1ChP,EAAWa,cAGT5C,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAEFnB,EAAiBgE,aAAY,SAAAvE,GAAK,OAAIA,EAAMO,kBAC1CC,EAA4BD,EAA5BC,QAASJ,EAAmBG,EAAnBH,QAASE,EAAUC,EAAVD,MAEpBQ,GAAgByD,aAAY,SAAAvE,GAAK,OAAIA,EAAMc,iBAChCwQ,GAA8DxQ,GAAvEV,QAA+BmR,GAAwCzQ,GAA/CR,MAA6BkR,GAAkB1Q,GAA3BH,QAEpDsH,qBAAU,WACJvG,GAAYA,EAASkE,QAClBpF,GAAWA,EAAQgG,MAAQ2D,GAG9B4B,EAAQvL,EAAQgF,MAChBgN,EAAShS,EAAQ0G,OACjBqL,EAAY/R,EAAQuR,UACpBM,EAAe7R,EAAQ0I,aACvBoJ,EAAc9R,EAAQwR,YACtBE,EAAS1R,EAAQmG,OACjB8L,EAAkBjS,EAAQ2I,iBAR1B1F,EAAS2D,EAAmB+C,IAW9B3B,EAAQoB,KAAK,OAEd,CAACnG,EAAU+E,EAAS9G,EAAUyI,EAAW3J,IAG5C,IAAMkS,GAAkB,uCAAG,WAAOnJ,GAAP,uBAAA5F,EAAA,6DAEnBgP,EAAOpJ,EAAEC,OAAOoJ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GAJA,SAOjB/O,EAAS,CACbC,QAAS,CACP,eAAgB,wBATG,SAaAG,IAAMwH,KAAK,cAAeqH,EAAUjP,GAbpC,gBAafM,EAbe,EAafA,KAERgO,EAAShO,GAfc,kDAiBvBkO,EAAc,kDAjBS,0DAAH,sDA+CxB,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,OAAD,CAAMtN,GAAG,qBAAqBM,UAAU,sBAAxC,WAGA,8CACChF,EACI,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAE5B,kBAAC8I,EAAA,EAAD,CAAMkC,SA5BI,SAAC/B,GACrBA,EAAEgC,iBACF9H,EpBMyB,SAACD,EAAIhD,GAAL,8CAAiB,WAAOiD,EAAUC,GAAjB,uBAAAC,EAAA,sEAE1CF,EAAS,CACPtD,KZ9EgC,2BY2EQ,EAMNuD,IAAfhC,EANqB,EAMlCD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYpC,EAASqC,SAXI,SAcnBC,IAAMwI,IAAN,wBAA2BhJ,GAAMhD,EAASoD,GAdvB,gBAclCM,EAdkC,EAclCA,KAERT,EAAS,CAAEtD,KZ1FuB,2BY4FlCsD,EAAS,CACPtD,KZ1GiC,0BY2GjCE,QAAS6D,IApB+B,kDAwB1CT,EAAS,CACPtD,KZlG6B,sBYmG7BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UA1BrD,0DAAjB,wDoBNhB4O,CAAc7I,EACrB,CACE3E,OACA0B,QACA6K,WACA7I,cACA8I,aACArL,QACAwC,sBAoBQ,kBAACC,EAAA,EAAKsC,MAAN,CAAYC,UAAU,QACpB,kBAACvC,EAAA,EAAKwC,MAAN,aACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,aAAa5F,MAAOT,EAAM8D,SAAU,SAAAC,GAAC,OAAIwC,EAAQxC,EAAEC,OAAOvD,WAIlG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,cACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,SAAS0L,YAAY,cAAc5F,MAAOiB,EAAOoC,SAAU,SAAAC,GAAC,OAAIiJ,EAASjJ,EAAEC,OAAOvD,WAIvG,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,YACpB,kBAACvC,EAAA,EAAKwC,MAAN,iBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,iBAAiB5F,MAAO8L,EAAUzI,SAAU,SAAAC,GAAC,OAAIgJ,EAAYhJ,EAAEC,OAAOvD,WAI9G,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,eACpB,kBAACvC,EAAA,EAAKwC,MAAN,oBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,oBAAoB5F,MAAOiD,EAAaI,SAAU,SAAAC,GAAC,OAAI8I,EAAe9I,EAAEC,OAAOvD,WAIvH,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,cACpB,kBAACvC,EAAA,EAAKwC,MAAN,mBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,mBAAmB5F,MAAO+L,EAAY1I,SAAU,SAAAC,GAAC,OAAI+I,EAAc/I,EAAEC,OAAOvD,WAIpH,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,kBACpB,kBAACvC,EAAA,EAAKwC,MAAN,wBACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,SAAS0L,YAAY,wBAAwB5F,MAAOkD,EAAgBG,SAAU,SAAAC,GAAC,OAAIkJ,EAAkBlJ,EAAEC,OAAOvD,WAInI,kBAACmD,EAAA,EAAKsC,MAAN,CAAYC,UAAU,SACpB,kBAACvC,EAAA,EAAKwC,MAAN,cACA,kBAACxC,EAAA,EAAKC,QAAN,CAAclJ,KAAK,OAAO0L,YAAY,kBAAkB5F,MAAOU,EAAO2C,SAAU,SAAAC,GAAC,OAAI2I,EAAS3I,EAAEC,OAAOvD,UAEvG,kBAACmD,EAAA,EAAK6J,KAAN,CAAWzP,GAAG,aAAagL,MAAM,cAAc0E,QAAM,EAAC5J,SAAUoJ,MAEjEP,GAAc,kBAAC,EAAD,CAASxN,QAAQ,UAAUwN,GAG1C,kBAACxI,EAAA,EAAD,CAAQxJ,KAAK,SAASwE,QAAQ,UAAUS,UAAU,QAAlD,UAECmM,GACE,kBAAC,EAAD,CAAS5M,QAAQ,UAAU4M,IAC1BC,GACC,kBAAC,EAAD,iBACCF,GACC,kBAAC,EAAD,MACE,yCClFV6B,GA7ES,SAAC,GAAiB,IAAf3K,EAAc,EAAdA,QACnB/E,EAAWa,cAEX5B,EAAY6B,aAAY,SAAAvE,GAAK,OAAIA,EAAM0C,aACrCtC,EAA2BsC,EAA3BtC,QAASE,EAAkBoC,EAAlBpC,MAAOmC,EAAWC,EAAXD,OAGhBf,EADU6C,aAAY,SAAAvE,GAAK,OAAIA,EAAMyB,aACrCC,SAGAf,EADY4D,aAAY,SAAAvE,GAAK,OAAIA,EAAM2C,eACvChC,QAERsH,qBAAU,WACJvG,GAAYA,EAASkE,QACvBnC,EXyFoB,uCAAM,WAAOA,EAAUC,GAAjB,uBAAAC,EAAA,sEAE5BF,EAAS,CAAEtD,KhBhGmB,uBgB8FF,EAIQuD,IAAfhC,EAJO,EAIpBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SARV,SAYLC,IAAMC,IAAN,cAAyBL,GAZpB,gBAYpBM,EAZoB,EAYpBA,KAERT,EAAS,CACPtD,KhB5G4B,qBgB6G5BE,QAAS6D,IAhBiB,kDAoB5BT,EAAS,CACPtD,KhBjHyB,kBgBkHzBE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAtBnE,0DAAN,yDWtFpBoE,EAAQoB,KAAK,OAGd,CAACnG,EAAU+E,EAAS9G,EAAUf,IAEjC,IAAMoQ,EAAgB,SAACvN,GACjB2M,OAAOa,QAAQ,kBACjBvN,EX0GqB,SAACD,GAAD,8CAAQ,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,sEAE/BF,EAAS,CACPtD,KhBxH8B,yBgBqHD,EAMKuD,IAAfhC,EANU,EAMvBD,UAAaC,SAEfkC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYpC,EAASqC,SAVP,SAazBC,IAAMiN,OAAN,sBAA4BzN,GAAMI,GAbT,OAc/BH,EAAS,CAAEtD,KhBlIqB,yBgBoHD,gDAiB/BsD,EAAS,CACPtD,KhBrI2B,oBgBsI3BE,QAAS,KAAM8D,UAAY,KAAMA,SAASD,KAAKE,QAAU,KAAMD,SAASD,KAAKE,QAAU,KAAMA,UAnBhE,yDAAR,wDW1GZgP,CAAY5P,KAIzB,OACE,oCACE,kBAACsC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wCAGH3F,EACI,kBAAC,EAAD,MACDE,EACG,kBAAC,EAAD,CAASqE,QAAQ,UAAUrE,GAC3B,kBAACoM,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAC1H,UAAU,YACpD,+BACE,4BACE,oCACA,kCACA,wCACA,qCACA,oCACA,yCACA,+BAGJ,+BACG3C,EAAOnB,KAAI,SAAAc,GAAK,OACf,wBAAI8F,IAAK9F,EAAMoE,KACb,4BAAKpE,EAAM2K,UAAUC,UAAU,EAAG,KAClC,4BAAK5K,EAAMoE,KACX,4BAAKpE,EAAMP,MAAQO,EAAMP,KAAK2D,MAC9B,4BAAKpD,EAAM6K,YACX,4BAAK7K,EAAM8K,OAAS9K,EAAM+K,OAAOH,UAAU,EAAG,IAAM,uBAAG5H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAChG,4BAAK/D,EAAMgL,YAAchL,EAAMiL,YAAYL,UAAU,EAAG,IAAM,uBAAG5H,UAAU,eAAegB,MAAO,CAAED,MAAO,UAC1G,4BACE,kBAAC,gBAAD,CAAerB,GAAE,iBAAY1C,EAAMoE,MACjC,kBAACmD,EAAA,EAAD,CAAQhF,QAAQ,QAAQS,UAAU,UAAlC,YAEF,kBAACuE,EAAA,EAAD,CAAQhF,QAAQ,SAASS,UAAU,SAASM,QAAS,kBAAMqL,EAAc3O,EAAMoE,OAC7E,uBAAGpB,UAAU,2BCxBpBiO,GA5BH,WACV,OACE,kBAAC,gBAAD,KACE,kBAAC,EAAD,MACA,kBAACxO,EAAA,EAAD,KACE,0BAAMO,UAAU,QACd,kBAAC,IAAD,CAAOkO,KAAK,eAAeC,UAAWhL,IACtC,kBAAC,IAAD,CAAO+K,KAAK,aAAaC,UAAWtJ,IACpC,kBAAC,IAAD,CAAOqJ,KAAK,YAAYC,UAAW5F,KACnC,kBAAC,IAAD,CAAO2F,KAAK,WAAWC,UAAWlF,KAClC,kBAAC,IAAD,CAAOiF,KAAK,cAAcC,UAAW7E,KACrC,kBAAC,IAAD,CAAO4E,KAAK,aAAaC,UAAWnE,KACpC,kBAAC,IAAD,CAAOkE,KAAK,SAASC,UAAWvI,KAChC,kBAAC,IAAD,CAAOsI,KAAK,YAAYC,UAAWzH,KACnC,kBAAC,IAAD,CAAOwH,KAAK,WAAWC,UAAWlH,KAClC,kBAAC,IAAD,CAAOiH,KAAK,kBAAkBC,UAAW1C,KACzC,kBAAC,IAAD,CAAOyC,KAAK,uBAAuBC,UAAWpC,KAC9C,kBAAC,IAAD,CAAOmC,KAAK,qBAAqBC,UAAW7B,KAC5C,kBAAC,IAAD,CAAO4B,KAAK,0BAA0BC,UAAWtB,KACjD,kBAAC,IAAD,CAAOqB,KAAK,mBAAmBC,UAAWJ,KAC1C,kBAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWvL,EAAYwL,OAAK,MAGhD,kBAAC,EAAD,QChCcC,QACW,cAA7BtD,OAAOjG,SAASwJ,UAEe,UAA7BvD,OAAOjG,SAASwJ,UAEhBvD,OAAOjG,SAASwJ,SAASjL,MACvB,2DCTNkL,IAASC,OACP,kBAAC,IAAD,CAAUzQ,MAAOA,GACf,kBAAC,GAAD,OAEF0M,SAASgE,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9T,GACLgQ,QAAQhQ,MAAMA,EAAM8D,a","file":"static/js/main.f251e29b.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userDetailsReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userDeleteReducer,\n  userUpdateReducer\n} from './reducers/userReducers'\nimport { orderCreateReducer, orderDeleteReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : ''\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: paymentMethodFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case (PRODUCT_LIST_REQUEST): {\n      return { loading: true, products: [] }\n    }\n    case (PRODUCT_LIST_SUCCESS): {\n      return { loading: false, products: action.payload }\n    }\n    case (PRODUCT_LIST_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n  switch (action.type) {\n    case (PRODUCT_DETAILS_REQUEST): {\n      return { loading: true, ...state }\n    }\n    case (PRODUCT_DETAILS_SUCCESS): {\n      return { loading: false, product: action.payload }\n    }\n    case (PRODUCT_DETAILS_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case (PRODUCT_DELETE_REQUEST): {\n      return { loading: true }\n    }\n    case (PRODUCT_DELETE_SUCCESS): {\n      return { loading: false, success: true }\n    }\n    case (PRODUCT_DELETE_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case (PRODUCT_CREATE_REQUEST): {\n      return { loading: true }\n    }\n    case (PRODUCT_CREATE_SUCCESS): {\n      return { loading: false, createdProduct: action.payload, success: true }\n    }\n    case (PRODUCT_CREATE_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    case (PRODUCT_CREATE_RESET): {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case (PRODUCT_UPDATE_REQUEST): {\n      return { loading: true, }\n    }\n    case (PRODUCT_UPDATE_SUCCESS): {\n      return { loading: false, success: true }\n    }\n    case (PRODUCT_UPDATE_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\n\n\n\n\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM: {\n      const item = action.payload\n\n      //find those that already existed\n      const existItem = state.cartItems.find(x => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x =>\n            x.product === existItem.product ? item : x\n          )\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n\n    }\n    case CART_REMOVE_ITEM: {\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      }\n    }\n    case CART_SAVE_SHIPPING_ADDRESS: {\n      return {\n        ...state,\n        shippingAddress: action.payload\n      }\n    }\n    case CART_SAVE_PAYMENT_METHOD: {\n      return {\n        ...state,\n        paymentMethod: action.payload\n      }\n    }\n    default: return state\n  }\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST: {\n      return { loading: true }\n    }\n    case USER_LOGIN_SUCCESS: {\n      return { loading: false, userInfo: action.payload }\n    }\n    case USER_LOGIN_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    case USER_LOGOUT: {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST: {\n      return { loading: true }\n    }\n    case USER_REGISTER_SUCCESS: {\n      return { loading: false, userInfo: action.payload }\n    }\n    case USER_REGISTER_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: null }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case USER_DETAILS_SUCCESS: {\n      return { loading: false, user: action.payload }\n    }\n    case USER_DETAILS_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    case USER_LOGOUT: {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST: {\n      return { loading: true }\n    }\n    case USER_UPDATE_PROFILE_SUCCESS: {\n      return { loading: false, success: true, userInfo: action.payload }\n    }\n    case USER_UPDATE_PROFILE_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    case USER_UPDATE_PROFILE_RESET: {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST: {\n      return { loading: true }\n    }\n    case USER_LIST_SUCCESS: {\n      return { loading: false, users: action.payload }\n    }\n    case USER_LIST_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    case USER_LOGOUT: {\n      return { users: [] }\n    }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST: {\n      return { loading: true }\n    }\n    case USER_DELETE_SUCCESS: {\n      return { loading: false, success: true }\n    }\n    case USER_DELETE_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST: {\n      return { loading: true }\n    }\n    case USER_UPDATE_SUCCESS: {\n      return { loading: false, success: true }\n    }\n    case USER_UPDATE_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'","import { ORDER_CREATE_FAIL, ORDER_CREATE_SUCCESS, ORDER_CREATE_REQUEST, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from '../constants/orderConstants'\n\nconst orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST: {\n      return { loading: true }\n    }\n    case ORDER_CREATE_SUCCESS: {\n      return { loading: false, success: true, order: action.payload }\n    }\n    case ORDER_CREATE_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nconst orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case ORDER_DETAILS_SUCCESS: {\n      return { loading: false, order: action.payload }\n    }\n    case ORDER_DETAILS_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nconst orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST: {\n      return {\n        loading: true\n      }\n    }\n    case ORDER_PAY_SUCCESS: {\n      return { loading: false, success: true }\n    }\n    case ORDER_PAY_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    case ORDER_PAY_RESET: {\n      return {}\n    }\n    default:\n      return state\n  }\n}\n\nconst orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST: {\n      return { loading: true }\n    }\n    case ORDER_LIST_MY_SUCCESS: {\n      return { loading: false, orders: action.payload }\n    }\n    case ORDER_LIST_MY_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nconst orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST: {\n      return { loading: true }\n    }\n    case ORDER_LIST_SUCCESS: {\n      return { loading: false, orders: action.payload }\n    }\n    case ORDER_LIST_FAIL: {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nconst orderDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case (ORDER_DELETE_REQUEST): {\n      return { loading: true }\n    }\n    case (ORDER_DELETE_SUCCESS): {\n      return { loading: false, success: true }\n    }\n    case (ORDER_DELETE_FAIL): {\n      return { loading: false, error: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeleteReducer }","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST'\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS'\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL'","import axios from 'axios'\nimport { USER_LOGIN_FAIL, USER_LOGIN_SUCCESS, USER_LOGIN_REQUEST, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    })\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    })\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config)\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/users/${id}`, config)\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const updateUserProfile = (id, user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(`/api/users/${id}`, user, config)\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.get(`/api/users`, config)\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`/api/users/${id}`, config)\n    dispatch({ type: USER_DELETE_SUCCESS })\n\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const updateUser = (id, user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(`/api/users/${id}`, user, config)\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    })\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Avo|Yoga</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n              </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/login'>\n                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              ) : (\n                  <LinkContainer to='/login'>\n                    <Nav.Link>\n                      <i className=\"fas fa-user\"></i>Sign in\n              </Nav.Link>\n                  </LinkContainer>\n                )\n              }\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar >\n    </header >\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Avo|yoga</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span style={{ color }}>\n        <i className={value >= 1 ? `fas fa-star` : value >= 0.5 ? `fas fa-star-half-alt` : `far fa-star`}></i>\n      </span>\n      <span style={{ color }}>\n        <i className={value >= 2 ? `fas fa-star` : value >= 1.5 ? `fas fa-star-half-alt` : `far fa-star`}></i>\n      </span>\n      <span style={{ color }}>\n        <i className={value >= 3 ? `fas fa-star` : value >= 2.5 ? `fas fa-star-half-alt` : `far fa-star`}></i>\n      </span>\n      <span style={{ color }}>\n        <i className={value >= 4 ? `fas fa-star` : value >= 3.5 ? `fas fa-star-half-alt` : `far fa-star`}></i>\n      </span>\n      <span style={{ color }}>\n        <i className={value >= 5 ? `fas fa-star` : value >= 4.5 ? `fas fa-star-half-alt` : `far fa-star`}></i>\n      </span>\n      <span >{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825'\n}\n\nexport default Rating\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\"></Card.Img>\n      </Link>\n\n      <Card.Body>\n\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div' >\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`} />\n        </Card.Text>\n\n        <Card.Text className='py-3' as='h3'>${product.price}</Card.Text>\n\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product;\n","import axios from 'axios'\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL } from '../constants/productConstants'\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get('/api/products')\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`/api/products/${id}`, config)\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.post(`/api/products`, {}, config)\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    const { data } = await axios.put(`/api/products/${id}`, product, config)\n\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS })\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}\n    >\n\n      <span className='sr-only'>Loading...</span>\n\n    </Spinner >\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return (\n    <Alert variant={variant}>\n      {children}\n    </Alert>\n  )\n}\n\nMessage.defaultProps = {\n  variant: 'info'\n}\n\nexport default Message\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport { listProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n\n  useEffect(() => {\n    dispatch(listProducts())\n  }\n    , [dispatch])\n\n  return (\n    <>\n      <h1>Latest Classes</h1>\n      {loading\n        ? <Loader />\n        : error\n          ? <Message variant='danger' children={error} />\n          :\n          <Row>\n            {products.map(product => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n      }\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n\n  const dispatch = useDispatch()\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  return (\n    <>\n      <Link to='/' className='btn btn-light my-3'> Go Back </Link>\n\n      {loading\n        ? <Loader />\n        : error\n          ? <Message variant='danger' children={error} />\n          :\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item><h3>{product.name}</h3></ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </ListGroup.Item>\n                <ListGroup.Item>${product.price}</ListGroup.Item>\n                <ListGroup.Item>{product.description}</ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        Price:\n                  </Col>\n                      <Col>\n                        <strong>\n                          ${product.price}\n                        </strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        Status:\n                  </Col>\n                      <Col>\n                        {product.slotsAvailable > 0 ? 'Class available' : 'Full Class'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.slotsAvailable > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>\n                          Slots available:\n                      </Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e => setQty(e.target.value))}>\n                            {\n                              [...Array(product.slotsAvailable).keys()].map(x => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              ))\n                            }\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>\n                        <Button\n                          onClick={addToCartHandler}\n                          className='btn btn-block'\n                          type='button'\n                          disabled={product.slotsAvailable <= 0}>\n                          Add to Cart </Button>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row >\n      }\n\n    </>\n\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      slotsAvailable: data.slotsAvailable,\n      qty\n    }\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch, action) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch, action) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport Message from '../components/Message'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1   //?qty=1\n\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'> Go back </Link></Message> : (\n          <ListGroup variant='flush'>\n            {cartItems.map(item => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e => dispatch(addToCart(item.product, Number(e.target.value))))}>\n                      {\n                        [...Array(item.slotsAvailable).keys()].map(x => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))\n                      }\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\n                      <i className='fas fa-trash'></i></Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n              ${cartItems.reduce((acc, item) => acc + (item.qty * item.price), 0).toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6} >\n          {children}\n        </Col>\n      </Row>\n\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Col, Row, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>Sign In</Button>\n\n      </Form>\n\n      <Row className='py-3'>\n        <Col>New Customer?{' '}\n          <Link to={redirect ? `register?redirect=${redirect}` : '/register'}> Register</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Col, Row, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const userRegister = useSelector(state => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n\n  }, [history, userInfo, redirect, password, confirmPassword])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match ')\n    } else {\n      setMessage(null)\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='name'>\n          <Form.Label>Username</Form.Label>\n          <Form.Control type='name' placeholder='Enter username' value={name} onChange={e => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control type='password' placeholder='Confirm  password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>Register</Button>\n\n      </Form>\n\n      <Row className='py-3'>\n        <Col>Have An Account? {' '}\n          <Link to={redirect ? `login?redirect=${redirect}` : '/login'}> Login</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL, ORDER_DELETE_SUCCESS } from '../constants/orderConstants'\nimport axios from 'axios'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.post('/api/orders', order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_PAY_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    })\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}\n\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST\n    })\n\n    const { userLogin: { userInfo } } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    }\n    await axios.delete(`/api/orders/${id}`, config)\n    dispatch({ type: ORDER_DELETE_SUCCESS })\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    })\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Form, Col, Row, Button, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector(state => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      // if(!user.name) TODO: This always fail to fetch on the first login(only when page refreshes it works)\n      if (!user || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET }) //TODO: Success message appear for millisecond\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Password do not match ')\n    } else {\n      setMessage(null)\n      dispatch(updateUserProfile('profile', { id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n\n          <Form.Group controlId='name'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control type='name' placeholder='Enter username' value={name} onChange={e => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type='password' placeholder='Enter password' value={password} onChange={e => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control type='password' placeholder='Confirm  password' value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>Update</Button>\n\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders\n          ? (<Loader />)\n          : errorOrders\n            ? (<Message variant='danger'>{errorOrders}</Message>)\n            : (<Table striped bordered hover responsive className='table-sm'>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>DATE</th>\n                  <th>TOTAL</th>\n                  <th>PAID</th>\n                  <th>DELIVERED</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map(order => (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt.substring(0, 10)}</td>\n                    <td>{order.totalPrice}</td>\n                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                    <td>\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button variant='light' className='btn-sm'>Details</Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>)}\n      </Col>\n    </Row>\n\n\n  )\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutStep = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-md-center mb-4'>\n      <Nav.Item>\n        {step1\n          ? (<LinkContainer to='/login'>\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>)\n          : (<Nav.Link disabled>Login</Nav.Link>)\n        }\n      </Nav.Item>\n      <Nav.Item>\n        {step2\n          ? (<LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>)\n          : (<Nav.Link disabled>Shipping</Nav.Link>)\n        }\n      </Nav.Item>\n      <Nav.Item>\n        {step3\n          ? (<LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>)\n          : (<Nav.Link disabled>Payment</Nav.Link>)\n        }\n      </Nav.Item>\n      <Nav.Item>\n        {step4\n          ? (<LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>)\n          : (<Nav.Link disabled>Place Order</Nav.Link>)\n        }\n      </Nav.Item>\n\n    </Nav>\n  )\n}\n\nexport default CheckoutStep\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutStep'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='address'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={e => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='city'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={e => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='postalCode'\n            placeholder='Enter postalCode'\n            value={postalCode}\n            required\n            onChange={e => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='country'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={e => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutStep'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('Paypal')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n\n            <Form.Check\n              type='radio'\n              label='Paypal or Credit Card'\n              id='Paypal'\n              name='paymentMethod'\n              value='Paypal'\n              checked\n              onChange={e => { setPaymentMethod(e.target.value) }}\n            ></Form.Check>\n\n            <Form.Check\n              type='radio'\n              label='Grabpay'\n              id='Grabpay'\n              name='paymentMethod'\n              value='Grabpay'\n              onChange={e => { setPaymentMethod(e.target.value) }}\n            ></Form.Check>\n\n          </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary'>Continue</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Col, Row, Button, Card, ListGroup, Image } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutStep from '../components/CheckoutStep'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n\n  //Calculate prices\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n  cart.taxPrice = addDecimals(Number(cart.itemsPrice * 0.16))\n  cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.taxPrice))\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { success, order, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line \n  }, [history, success])\n\n  const placeOrderHandler = (e) => {\n    dispatch(createOrder({\n      orderItems: cart.cartItems,\n      shippingAddress: cart.shippingAddress,\n      paymentMethod: cart.paymentMethod,\n      itemsPrice: cart.itemsPrice,\n      taxPrice: cart.taxPrice,\n      totalPrice: cart.totalPrice,\n      shippingPrice: cart.shippingPrice\n    }))\n  }\n\n  return (\n    <>\n      <CheckoutStep step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {' '}\n                {cart.shippingAddress.postalCode}, {' '} {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order items</h2>\n              {cart.cartItems.length === 0\n                ? (<Message>Your cart is empty</Message>)\n                : (\n\n                  <ListGroup>\n                    {cart.cartItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col className='py-3'>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4} className='py-3'>\n                            {item.qty} x ${item.price} = {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n\n                )}\n            </ListGroup.Item>\n\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n\n              <ListGroup.Item>\n                <h2>Order Summary: </h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>$0.00</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'> {error} </Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n\n\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Col, Row, Card, ListGroup, Image, Button } from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({ match }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { loading, order, error } = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => { setSdkReady(true) }\n      document.body.appendChild(script)\n    }\n\n    if (!order || order._id !== orderId || successPay) {\n      dispatch({ type: ORDER_PAY_RESET })\n      //if you dont put this, when you pay, it will keep refreshing, successPay will always be true\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      }\n    } else {\n      setSdkReady(true)\n    }\n  }, [dispatch, order, orderId, successPay])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliveredHandler = async () => {\n    try {\n      const config = {\n        headers: { Authorization: `Bearer ${userInfo.token}` }\n      }\n\n      await axios.put(`/api/orders/${orderId}/deliver`, {}, config)\n\n      dispatch(getOrderDetails(orderId))\n    } catch (error) {\n      console.log(error.response && error.response.data.message ? error.response.data.message : error.message)\n    }\n  }\n\n  return loading\n    ? (<Loader />)\n    : error\n      ? (<Message variant='danger'> {error} </Message>)\n      : (<>\n        <Row>\n          <Col md={8}>\n            <ListGroup variant='flush'>\n\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Name: </strong>{order.user.name}\n                </p>\n                <p>\n                  <strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                </p>\n                <p>\n                  <strong>Address: </strong>\n                  {order.shippingAddress.address}, {order.shippingAddress.city}, {' '}\n                  {order.shippingAddress.postalCode}, {' '} {order.shippingAddress.country}\n                </p>\n                {order.isDelivered\n                  ? (<Message variant='success'>Delivered on {order.deliveredAt}</Message>)\n                  : (<Message variant='danger'>Not Delivered</Message>)}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n                {order.isPaid\n                  ? (<Message variant='success'>Paid on {order.paidAt}</Message>)\n                  : (<Message variant='danger'>Not Paid</Message>)}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h2>Order items</h2>\n                {order.orderItems.length === 0\n                  ? (<Message>Order is empty</Message>)\n                  : (\n\n                    <ListGroup>\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={2}>\n                              <Image src={item.image} alt={item.name} fluid rounded />\n                            </Col>\n                            <Col className='py-3'>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4} className='py-3'>\n                              {item.qty} x ${item.price} = {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n\n                  )}\n              </ListGroup.Item>\n\n            </ListGroup>\n          </Col>\n          <Col md={4}>\n            <Card>\n              <ListGroup variant='flush'>\n\n                <ListGroup.Item>\n                  <h2>Order Summary: </h2>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>${order.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>${order.shippingPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>${order.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Total Price</Col>\n                    <Col>${order.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                {!order.isPaid && (\n                  <ListGroup.Item>\n                    {loadingPay && <Loader />}\n                    {!sdkReady ? <Loader /> : (\n                      <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                    )}\n                  </ListGroup.Item>\n                )}\n\n              </ListGroup>\n            </Card>\n\n            {userInfo && userInfo.isAdmin && order.isDelivered\n              ? (<Button className='my-3 btn-block' variant='dark' disabled onClick={deliveredHandler}>\n                Delivered</Button>)\n              : userInfo && userInfo.isAdmin && order.isPaid\n                ? (<Button className='my-3 btn-block' variant='dark' onClick={deliveredHandler}>\n                  Mask as Deliver</Button>)\n                : (<></>)}\n\n          </Col>\n        </Row>\n      </>\n      )\n\n}\n\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { Button, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector(state => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector(state => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/')\n    }\n\n  }, [dispatch, history, userInfo, successDelete])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading\n        ? (<Loader />)\n        : error\n          ? (<Message variant='danger'>{error}</Message>)\n          : (<Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>EMAIL</th>\n                <th>ADMIN</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <tr key={user._id}>\n                  <th>{user._id}</th>\n                  <th>{user.name}</th>\n                  <th><a href={`mailto: ${user.email}`}>{user.email}</a></th>\n                  <th>{user.isAdmin\n                    ? <i className='fas fa-check' style={{ color: 'green' }}></i>\n                    : <i className='fas fa-times' style={{ color: 'red' }}></i>}\n                  </th>\n                  <th>\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                      <Button variant='light' className='btn-sm'><i className='fas fa-edit'></i></Button>\n                    </LinkContainer>\n                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </th>\n                </tr>\n              ))}\n            </tbody>\n          </Table >)\n      }\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nconst UserEditScreen = ({ history, match }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector(state => state.userUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      if (!user || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    } else {\n      history.push('/')\n    }\n  }, [dispatch, history, userInfo, userId, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser(userId, { name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <FormContainer>\n        <Link to='/admin/userlist' className='btn btn-light my-3' >Go back\n    </Link>\n\n        <h2>Update User</h2>\n        {loading\n          ? (<Loader />)\n          : error\n            ? (<Message variant='danger'>{error}</Message>)\n            : (\n              <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type='name' placeholder='Enter username' value={name} onChange={e => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control type='email' placeholder='Enter email' value={email} onChange={e => setEmail(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='isAdmin'>\n                  <Form.Label>Admin user</Form.Label>\n                  <Form.Check type='checkbox' checked={isAdmin} onChange={e => setIsAdmin(e.target.checked)}\n                  ></Form.Check>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className='my-3'>Update</Button>\n\n                {errorUpdate ?\n                  (<Message variant='danger'>{errorUpdate}</Message>)\n                  : successUpdate ?\n                    (<Message>Updated!</Message>)\n                    : loadingUpdate ?\n                      (<Loader />)\n                      : (<></>)\n                }\n\n              </Form>\n            )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { Button, Table, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products } = productList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDelete = useSelector(state => state.productDelete)\n  const { success } = productDelete\n\n  const productCreate = useSelector(state => state.productCreate)\n  const { success: successCreate, createdProduct, error: errorCreate, loading: loadingCreate } = productCreate\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listProducts())\n\n    } else {\n      history.push('/')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n      dispatch({ type: PRODUCT_CREATE_RESET })\n    }\n\n  }, [dispatch, history, userInfo, success, createdProduct, successCreate])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='btn-sm my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'> Create Product</i>\n          </Button>\n        </Col>\n      </Row>\n      {errorCreate && (<Message variant='danger'>{errorCreate}</Message>)}\n      {loadingCreate && <Loader />}\n      {loading\n        ? (<Loader />)\n        : error\n          ? (<Message variant='danger'>{error}</Message>)\n          : (<Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>INSTRUCTOR</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <tr key={product._id}>\n                  <th>{product._id}</th>\n                  <th>{product.name}</th>\n                  <th>${product.price}</th>\n                  <th>{product.category}</th>\n                  <th>{product.instructor}</th>\n                  <th>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </th>\n                </tr>\n              ))}\n            </tbody>\n          </Table >)\n      }\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport FormContainer from '../components/FormContainer'\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [image, setImage] = useState('')\n  const [imageError, setImageError] = useState(false)\n  const [description, setDescription] = useState('')\n  const [instructor, setInstructor] = useState('')\n  const [category, setCategory] = useState('')\n  const [price, setPrice] = useState(0)\n  const [slotsAvailable, setSlotsAvailable] = useState(0)\n\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { product, loading, error } = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      if (!product || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setCategory(product.category)\n        setDescription(product.description)\n        setInstructor(product.instructor)\n        setImage(product.image)\n        setSlotsAvailable(product.slotsAvailable)\n      }\n    } else {\n      history.push('/')\n    }\n  }, [dispatch, history, userInfo, productId, product])\n\n\n  const imageUploadHandler = async (e) => {\n    //get back an array of files, but we are only uploading a single file\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n    } catch (error) {\n      setImageError('Please select an image file (png, jpg or jpeg)')\n    }\n    //Frontend checking pictorial app\n\n    // const fileTypes = ['image/jpeg', 'image/png'];\n    // if (selected && fileTypes.includes(selected.type)) {\n    //   setImage(selected);\n    //   setImageError('');\n    // } else {\n    //   setImage(null);\n    //   setImageError('Please select an image file (png or jpeg)');\n    // }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateProduct(productId,\n      {\n        name,\n        price,\n        category,\n        description,\n        instructor,\n        image,\n        slotsAvailable\n      }\n    ))\n  }\n\n\n  return (\n    <>\n      <FormContainer>\n        <Link to='/admin/productlist' className='btn btn-light my-3' >Go back\n    </Link>\n\n        <h2>Update Product</h2>\n        {loading\n          ? (<Loader />)\n          : error\n            ? (<Message variant='danger'>{error}</Message>)\n            : (\n              <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control type='name' placeholder='Enter Name' value={name} onChange={e => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                  <Form.Label>Price</Form.Label>\n                  <Form.Control type='number' placeholder='Enter Price' value={price} onChange={e => setPrice(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='category'>\n                  <Form.Label>Category</Form.Label>\n                  <Form.Control type='text' placeholder='Enter Category' value={category} onChange={e => setCategory(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control type='text' placeholder='Enter Description' value={description} onChange={e => setDescription(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='instructor'>\n                  <Form.Label>Instructor</Form.Label>\n                  <Form.Control type='text' placeholder='Enter Instructor' value={instructor} onChange={e => setInstructor(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='slotsAvailable'>\n                  <Form.Label>Slots Available</Form.Label>\n                  <Form.Control type='number' placeholder='Enter Slots Available' value={slotsAvailable} onChange={e => setSlotsAvailable(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='image'>\n                  <Form.Label>Image</Form.Label>\n                  <Form.Control type='text' placeholder='Enter Image URL' value={image} onChange={e => setImage(e.target.value)}\n                  ></Form.Control>\n                  <Form.File id='image-file' label='Choose File' custom onChange={imageUploadHandler} />\n                </Form.Group>\n                {imageError && <Message variant='danger'>{imageError}</Message>}\n\n\n                <Button type='submit' variant='primary' className='my-3'>Update</Button>\n\n                {errorUpdate ?\n                  (<Message variant='danger'>{errorUpdate}</Message>)\n                  : successUpdate ?\n                    (<Message>Updated!</Message>)\n                    : loadingUpdate ?\n                      (<Loader />)\n                      : (<></>)\n                }\n\n              </Form>\n            )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { Button, Table, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders, deleteOrder } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector(state => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderDelete = useSelector(state => state.orderDelete)\n  const { success } = orderDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n\n    } else {\n      history.push('/')\n    }\n\n  }, [dispatch, history, userInfo, success])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteOrder(id))\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <h1>Orders</h1>\n        </Col>\n      </Row>\n      {loading\n        ? (<Loader />)\n        : error\n          ? (<Message variant='danger'>{error}</Message>)\n          : (<Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>DATE</th>\n                <th>ID</th>\n                <th>CUSTOMER</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map(order => (\n                <tr key={order._id}>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order._id}</td>\n                  <td>{order.user && order.user.name}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant='light' className='btn-sm'>Details</Button>\n                    </LinkContainer>\n                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(order._id)}>\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table >)\n      }\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen.js';\nimport CartScreen from './screens/CartScreen.js'\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Container>\n        <main className=\"py-3\">\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </main>\n      </Container>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}